var searchIndex = {};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[0,"example_generated","bitflags","This module shows an example of code generated by the macro. IT MUST NOT BE USED OUTSIDE THIS CRATE.",null,null],[3,"Flags","bitflags::example_generated","This is the same `Flags` struct defined in the crate level example. Note that this struct is just for documentation purposes only, it must not be used outside this crate.",null,null],[17,"FLAG_A","","",null,null],[17,"FLAG_B","","",null,null],[17,"FLAG_C","","",null,null],[17,"FLAG_ABC","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"ordering"}}],[11,"hash","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"all","","Returns the set containing all flags.",0,{"inputs":[],"output":{"name":"flags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",0,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",0,{"inputs":[{"name":"u32"}],"output":{"name":"flags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",0,{"inputs":[{"name":"self"},{"name":"flags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitor_assign","","Adds the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitxor_assign","","Toggles the set of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":{"name":"flags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",0,{"inputs":[{"name":"self"},{"name":"flags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",0,{"inputs":[{"name":"self"}],"output":{"name":"flags"}}],[11,"extend","","",0,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",0,{"inputs":[{"name":"t"}],"output":{"name":"flags"}}],[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"paths":[[3,"Flags"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining #[cfg] if-else statements.","items":[[14,"cfg_if","cfg_if","",null,null]],"paths":[]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"group","libc","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"in_addr","","",null,null],[12,"s_addr","","",6,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",7,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",8,null],[12,"imr_interface","","",8,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",9,null],[12,"ipv6mr_interface","","",9,null],[3,"hostent","","",null,null],[12,"h_name","","",10,null],[12,"h_aliases","","",10,null],[12,"h_addrtype","","",10,null],[12,"h_length","","",10,null],[12,"h_addr_list","","",10,null],[3,"iovec","","",null,null],[12,"iov_base","","",11,null],[12,"iov_len","","",11,null],[3,"pollfd","","",null,null],[12,"fd","","",12,null],[12,"events","","",12,null],[12,"revents","","",12,null],[3,"winsize","","",null,null],[12,"ws_row","","",13,null],[12,"ws_col","","",13,null],[12,"ws_xpixel","","",13,null],[12,"ws_ypixel","","",13,null],[3,"linger","","",null,null],[12,"l_onoff","","",14,null],[12,"l_linger","","",14,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",15,null],[3,"itimerval","","",null,null],[12,"it_interval","","",16,null],[12,"it_value","","",16,null],[3,"tms","","",null,null],[12,"tms_utime","","",17,null],[12,"tms_stime","","",17,null],[12,"tms_cutime","","",17,null],[12,"tms_cstime","","",17,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",18,null],[12,"sa_data","","",18,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",19,null],[12,"sin_port","","",19,null],[12,"sin_addr","","",19,null],[12,"sin_zero","","",19,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",20,null],[12,"sin6_port","","",20,null],[12,"sin6_flowinfo","","",20,null],[12,"sin6_addr","","",20,null],[12,"sin6_scope_id","","",20,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",21,null],[12,"sun_path","","",21,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",22,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",23,null],[12,"ai_family","","",23,null],[12,"ai_socktype","","",23,null],[12,"ai_protocol","","",23,null],[12,"ai_addrlen","","",23,null],[12,"ai_addr","","",23,null],[12,"ai_canonname","","",23,null],[12,"ai_next","","",23,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",24,null],[12,"nl_pid","","",24,null],[12,"nl_groups","","",24,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",25,null],[12,"sll_protocol","","",25,null],[12,"sll_ifindex","","",25,null],[12,"sll_hatype","","",25,null],[12,"sll_pkttype","","",25,null],[12,"sll_halen","","",25,null],[12,"sll_addr","","",25,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",26,null],[12,"tm_min","","",26,null],[12,"tm_hour","","",26,null],[12,"tm_mday","","",26,null],[12,"tm_mon","","",26,null],[12,"tm_year","","",26,null],[12,"tm_wday","","",26,null],[12,"tm_yday","","",26,null],[12,"tm_isdst","","",26,null],[12,"tm_gmtoff","","",26,null],[12,"tm_zone","","",26,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",27,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",28,null],[12,"dli_fbase","","",28,null],[12,"dli_sname","","",28,null],[12,"dli_saddr","","",28,null],[3,"epoll_event","","",null,null],[12,"events","","",29,null],[12,"u64","","",29,null],[3,"utsname","","",null,null],[12,"sysname","","",30,null],[12,"nodename","","",30,null],[12,"release","","",30,null],[12,"version","","",30,null],[12,"machine","","",30,null],[12,"domainname","","",30,null],[3,"lconv","","",null,null],[12,"decimal_point","","",31,null],[12,"thousands_sep","","",31,null],[12,"grouping","","",31,null],[12,"int_curr_symbol","","",31,null],[12,"currency_symbol","","",31,null],[12,"mon_decimal_point","","",31,null],[12,"mon_thousands_sep","","",31,null],[12,"mon_grouping","","",31,null],[12,"positive_sign","","",31,null],[12,"negative_sign","","",31,null],[12,"int_frac_digits","","",31,null],[12,"frac_digits","","",31,null],[12,"p_cs_precedes","","",31,null],[12,"p_sep_by_space","","",31,null],[12,"n_cs_precedes","","",31,null],[12,"n_sep_by_space","","",31,null],[12,"p_sign_posn","","",31,null],[12,"n_sign_posn","","",31,null],[12,"int_p_cs_precedes","","",31,null],[12,"int_p_sep_by_space","","",31,null],[12,"int_n_cs_precedes","","",31,null],[12,"int_n_sep_by_space","","",31,null],[12,"int_p_sign_posn","","",31,null],[12,"int_n_sign_posn","","",31,null],[3,"sigevent","","",null,null],[12,"sigev_value","","",32,null],[12,"sigev_signo","","",32,null],[12,"sigev_notify","","",32,null],[12,"sigev_notify_thread_id","","",32,null],[3,"dirent","","",null,null],[12,"d_ino","","",33,null],[12,"d_off","","",33,null],[12,"d_reclen","","",33,null],[12,"d_type","","",33,null],[12,"d_name","","",33,null],[3,"dirent64","","",null,null],[12,"d_ino","","",34,null],[12,"d_off","","",34,null],[12,"d_reclen","","",34,null],[12,"d_type","","",34,null],[12,"d_name","","",34,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",35,null],[12,"rlim_max","","",35,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",36,null],[12,"gl_pathv","","",36,null],[12,"gl_offs","","",36,null],[12,"gl_flags","","",36,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",37,null],[12,"ifa_name","","",37,null],[12,"ifa_flags","","",37,null],[12,"ifa_addr","","",37,null],[12,"ifa_netmask","","",37,null],[12,"ifa_ifu","","",37,null],[12,"ifa_data","","",37,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",38,null],[12,"pw_passwd","","",38,null],[12,"pw_uid","","",38,null],[12,"pw_gid","","",38,null],[12,"pw_gecos","","",38,null],[12,"pw_dir","","",38,null],[12,"pw_shell","","",38,null],[3,"spwd","","",null,null],[12,"sp_namp","","",39,null],[12,"sp_pwdp","","",39,null],[12,"sp_lstchg","","",39,null],[12,"sp_min","","",39,null],[12,"sp_max","","",39,null],[12,"sp_warn","","",39,null],[12,"sp_inact","","",39,null],[12,"sp_expire","","",39,null],[12,"sp_flag","","",39,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",40,null],[12,"f_frsize","","",40,null],[12,"f_blocks","","",40,null],[12,"f_bfree","","",40,null],[12,"f_bavail","","",40,null],[12,"f_files","","",40,null],[12,"f_ffree","","",40,null],[12,"f_favail","","",40,null],[12,"f_fsid","","",40,null],[12,"f_flag","","",40,null],[12,"f_namemax","","",40,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",41,null],[12,"dqb_bsoftlimit","","",41,null],[12,"dqb_curspace","","",41,null],[12,"dqb_ihardlimit","","",41,null],[12,"dqb_isoftlimit","","",41,null],[12,"dqb_curinodes","","",41,null],[12,"dqb_btime","","",41,null],[12,"dqb_itime","","",41,null],[12,"dqb_valid","","",41,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",42,null],[12,"ssi_errno","","",42,null],[12,"ssi_code","","",42,null],[12,"ssi_pid","","",42,null],[12,"ssi_uid","","",42,null],[12,"ssi_fd","","",42,null],[12,"ssi_tid","","",42,null],[12,"ssi_band","","",42,null],[12,"ssi_overrun","","",42,null],[12,"ssi_trapno","","",42,null],[12,"ssi_status","","",42,null],[12,"ssi_int","","",42,null],[12,"ssi_ptr","","",42,null],[12,"ssi_utime","","",42,null],[12,"ssi_stime","","",42,null],[12,"ssi_addr","","",42,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",43,null],[12,"mq_maxmsg","","",43,null],[12,"mq_msgsize","","",43,null],[12,"mq_curmsgs","","",43,null],[3,"cpu_set_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",44,null],[12,"if_name","","",44,null],[3,"msginfo","","",null,null],[12,"msgpool","","",45,null],[12,"msgmap","","",45,null],[12,"msgmax","","",45,null],[12,"msgmnb","","",45,null],[12,"msgmni","","",45,null],[12,"msgssz","","",45,null],[12,"msgtql","","",45,null],[12,"msgseg","","",45,null],[3,"mmsghdr","","",null,null],[12,"msg_hdr","","",46,null],[12,"msg_len","","",46,null],[3,"sembuf","","",null,null],[12,"sem_num","","",47,null],[12,"sem_op","","",47,null],[12,"sem_flg","","",47,null],[3,"input_event","","",null,null],[12,"time","","",48,null],[12,"type_","","",48,null],[12,"code","","",48,null],[12,"value","","",48,null],[3,"input_id","","",null,null],[12,"bustype","","",49,null],[12,"vendor","","",49,null],[12,"product","","",49,null],[12,"version","","",49,null],[3,"input_absinfo","","",null,null],[12,"value","","",50,null],[12,"minimum","","",50,null],[12,"maximum","","",50,null],[12,"fuzz","","",50,null],[12,"flat","","",50,null],[12,"resolution","","",50,null],[3,"input_keymap_entry","","",null,null],[12,"flags","","",51,null],[12,"len","","",51,null],[12,"index","","",51,null],[12,"keycode","","",51,null],[12,"scancode","","",51,null],[3,"input_mask","","",null,null],[12,"type_","","",52,null],[12,"codes_size","","",52,null],[12,"codes_ptr","","",52,null],[3,"ff_replay","","",null,null],[12,"length","","",53,null],[12,"delay","","",53,null],[3,"ff_trigger","","",null,null],[12,"button","","",54,null],[12,"interval","","",54,null],[3,"ff_envelope","","",null,null],[12,"attack_length","","",55,null],[12,"attack_level","","",55,null],[12,"fade_length","","",55,null],[12,"fade_level","","",55,null],[3,"ff_constant_effect","","",null,null],[12,"level","","",56,null],[12,"envelope","","",56,null],[3,"ff_ramp_effect","","",null,null],[12,"start_level","","",57,null],[12,"end_level","","",57,null],[12,"envelope","","",57,null],[3,"ff_condition_effect","","",null,null],[12,"right_saturation","","",58,null],[12,"left_saturation","","",58,null],[12,"right_coeff","","",58,null],[12,"left_coeff","","",58,null],[12,"deadband","","",58,null],[12,"center","","",58,null],[3,"ff_periodic_effect","","",null,null],[12,"waveform","","",59,null],[12,"period","","",59,null],[12,"magnitude","","",59,null],[12,"offset","","",59,null],[12,"phase","","",59,null],[12,"envelope","","",59,null],[12,"custom_len","","",59,null],[12,"custom_data","","",59,null],[3,"ff_rumble_effect","","",null,null],[12,"strong_magnitude","","",60,null],[12,"weak_magnitude","","",60,null],[3,"ff_effect","","",null,null],[12,"type_","","",61,null],[12,"id","","",61,null],[12,"direction","","",61,null],[12,"trigger","","",61,null],[12,"replay","","",61,null],[12,"u","","",61,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",62,null],[12,"aio_lio_opcode","","",62,null],[12,"aio_reqprio","","",62,null],[12,"aio_buf","","",62,null],[12,"aio_nbytes","","",62,null],[12,"aio_sigevent","","",62,null],[12,"aio_offset","","",62,null],[3,"__exit_status","","",null,null],[12,"e_termination","","",63,null],[12,"e_exit","","",63,null],[3,"__timeval","","",null,null],[12,"tv_sec","","",64,null],[12,"tv_usec","","",64,null],[3,"utmpx","","",null,null],[12,"ut_type","","",65,null],[12,"ut_pid","","",65,null],[12,"ut_line","","",65,null],[12,"ut_id","","",65,null],[12,"ut_user","","",65,null],[12,"ut_host","","",65,null],[12,"ut_exit","","",65,null],[12,"ut_session","","",65,null],[12,"ut_tv","","",65,null],[12,"ut_addr_v6","","",65,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",66,null],[12,"sa_mask","","",66,null],[12,"sa_flags","","",66,null],[12,"sa_restorer","","",66,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",67,null],[12,"ss_flags","","",67,null],[12,"ss_size","","",67,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",68,null],[12,"si_errno","","",68,null],[12,"si_code","","",68,null],[12,"_pad","","",68,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",69,null],[12,"gl_pathv","","",69,null],[12,"gl_offs","","",69,null],[12,"gl_flags","","",69,null],[3,"ucred","","",null,null],[12,"pid","","",70,null],[12,"uid","","",70,null],[12,"gid","","",70,null],[3,"statfs","","",null,null],[12,"f_type","","",71,null],[12,"f_bsize","","",71,null],[12,"f_blocks","","",71,null],[12,"f_bfree","","",71,null],[12,"f_bavail","","",71,null],[12,"f_files","","",71,null],[12,"f_ffree","","",71,null],[12,"f_fsid","","",71,null],[12,"f_namelen","","",71,null],[12,"f_frsize","","",71,null],[3,"msghdr","","",null,null],[12,"msg_name","","",72,null],[12,"msg_namelen","","",72,null],[12,"msg_iov","","",72,null],[12,"msg_iovlen","","",72,null],[12,"msg_control","","",72,null],[12,"msg_controllen","","",72,null],[12,"msg_flags","","",72,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",73,null],[12,"cmsg_level","","",73,null],[12,"cmsg_type","","",73,null],[3,"termios","","",null,null],[12,"c_iflag","","",74,null],[12,"c_oflag","","",74,null],[12,"c_cflag","","",74,null],[12,"c_lflag","","",74,null],[12,"c_line","","",74,null],[12,"c_cc","","",74,null],[12,"c_ispeed","","",74,null],[12,"c_ospeed","","",74,null],[3,"flock","","",null,null],[12,"l_type","","",75,null],[12,"l_whence","","",75,null],[12,"l_start","","",75,null],[12,"l_len","","",75,null],[12,"l_pid","","",75,null],[3,"sem_t","","",null,null],[3,"sigset_t","","",null,null],[3,"sysinfo","","",null,null],[12,"uptime","","",76,null],[12,"loads","","",76,null],[12,"totalram","","",76,null],[12,"freeram","","",76,null],[12,"sharedram","","",76,null],[12,"bufferram","","",76,null],[12,"totalswap","","",76,null],[12,"freeswap","","",76,null],[12,"procs","","",76,null],[12,"pad","","",76,null],[12,"totalhigh","","",76,null],[12,"freehigh","","",76,null],[12,"mem_unit","","",76,null],[12,"_f","","",76,null],[3,"msqid_ds","","",null,null],[12,"msg_perm","","",77,null],[12,"msg_stime","","",77,null],[12,"msg_rtime","","",77,null],[12,"msg_ctime","","",77,null],[12,"msg_qnum","","",77,null],[12,"msg_qbytes","","",77,null],[12,"msg_lspid","","",77,null],[12,"msg_lrpid","","",77,null],[3,"stat","","",null,null],[12,"st_dev","","",78,null],[12,"st_ino","","",78,null],[12,"st_nlink","","",78,null],[12,"st_mode","","",78,null],[12,"st_uid","","",78,null],[12,"st_gid","","",78,null],[12,"st_rdev","","",78,null],[12,"st_size","","",78,null],[12,"st_blksize","","",78,null],[12,"st_blocks","","",78,null],[12,"st_atime","","",78,null],[12,"st_atime_nsec","","",78,null],[12,"st_mtime","","",78,null],[12,"st_mtime_nsec","","",78,null],[12,"st_ctime","","",78,null],[12,"st_ctime_nsec","","",78,null],[3,"stat64","","",null,null],[12,"st_dev","","",79,null],[12,"st_ino","","",79,null],[12,"st_nlink","","",79,null],[12,"st_mode","","",79,null],[12,"st_uid","","",79,null],[12,"st_gid","","",79,null],[12,"st_rdev","","",79,null],[12,"st_size","","",79,null],[12,"st_blksize","","",79,null],[12,"st_blocks","","",79,null],[12,"st_atime","","",79,null],[12,"st_atime_nsec","","",79,null],[12,"st_mtime","","",79,null],[12,"st_mtime_nsec","","",79,null],[12,"st_ctime","","",79,null],[12,"st_ctime_nsec","","",79,null],[3,"pthread_attr_t","","",null,null],[3,"_libc_fpxreg","","",null,null],[12,"significand","","",80,null],[12,"exponent","","",80,null],[3,"_libc_xmmreg","","",null,null],[12,"element","","",81,null],[3,"_libc_fpstate","","",null,null],[12,"cwd","","",82,null],[12,"swd","","",82,null],[12,"ftw","","",82,null],[12,"fop","","",82,null],[12,"rip","","",82,null],[12,"rdp","","",82,null],[12,"mxcsr","","",82,null],[12,"mxcr_mask","","",82,null],[12,"_st","","",82,null],[12,"_xmm","","",82,null],[3,"user_fpregs_struct","","",null,null],[12,"cwd","","",83,null],[12,"swd","","",83,null],[12,"ftw","","",83,null],[12,"fop","","",83,null],[12,"rip","","",83,null],[12,"rdp","","",83,null],[12,"mxcsr","","",83,null],[12,"mxcr_mask","","",83,null],[12,"st_space","","",83,null],[12,"xmm_space","","",83,null],[3,"user_regs_struct","","",null,null],[12,"r15","","",84,null],[12,"r14","","",84,null],[12,"r13","","",84,null],[12,"r12","","",84,null],[12,"rbp","","",84,null],[12,"rbx","","",84,null],[12,"r11","","",84,null],[12,"r10","","",84,null],[12,"r9","","",84,null],[12,"r8","","",84,null],[12,"rax","","",84,null],[12,"rcx","","",84,null],[12,"rdx","","",84,null],[12,"rsi","","",84,null],[12,"rdi","","",84,null],[12,"orig_rax","","",84,null],[12,"rip","","",84,null],[12,"cs","","",84,null],[12,"eflags","","",84,null],[12,"rsp","","",84,null],[12,"ss","","",84,null],[12,"fs_base","","",84,null],[12,"gs_base","","",84,null],[12,"ds","","",84,null],[12,"es","","",84,null],[12,"fs","","",84,null],[12,"gs","","",84,null],[3,"user","","",null,null],[12,"regs","","",85,null],[12,"u_fpvalid","","",85,null],[12,"i387","","",85,null],[12,"u_tsize","","",85,null],[12,"u_dsize","","",85,null],[12,"u_ssize","","",85,null],[12,"start_code","","",85,null],[12,"start_stack","","",85,null],[12,"signal","","",85,null],[12,"u_ar0","","",85,null],[12,"u_fpstate","","",85,null],[12,"magic","","",85,null],[12,"u_comm","","",85,null],[12,"u_debugreg","","",85,null],[3,"mcontext_t","","",null,null],[12,"gregs","","",86,null],[12,"fpregs","","",86,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",87,null],[12,"uc_link","","",87,null],[12,"uc_stack","","",87,null],[12,"uc_mcontext","","",87,null],[12,"uc_sigmask","","",87,null],[3,"ipc_perm","","",null,null],[12,"__key","","",88,null],[12,"uid","","",88,null],[12,"gid","","",88,null],[12,"cuid","","",88,null],[12,"cgid","","",88,null],[12,"mode","","",88,null],[12,"__seq","","",88,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",89,null],[12,"shm_segsz","","",89,null],[12,"shm_atime","","",89,null],[12,"shm_dtime","","",89,null],[12,"shm_ctime","","",89,null],[12,"shm_cpid","","",89,null],[12,"shm_lpid","","",89,null],[12,"shm_nattch","","",89,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"locale_t","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFSTOPPED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WSTOPSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFCONTINUED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WIFSIGNALED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WCOREDUMP","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_CLR","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"c_uint"}}],[5,"makedev","","",null,{"inputs":[{"name":"c_uint"},{"name":"c_uint"}],"output":{"name":"dev_t"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getgrnam","","",null,null],[5,"getgrgid","","",null,null],[5,"endpwent","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"openat","","",null,null],[5,"faccessat","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"mkdirat","","",null,null],[5,"readlinkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fexecve","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_atfork","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"mknod","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_destroy","","",null,null],[5,"sem_open","","",null,null],[5,"sem_close","","",null,null],[5,"sem_unlink","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"sem_init","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"getsid","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"cfsetspeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"clock_nanosleep","","",null,null],[5,"clock_settime","","",null,null],[5,"dirfd","","",null,null],[5,"settimeofday","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"initgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"sched_setparam","","",null,null],[5,"sched_getparam","","",null,null],[5,"sched_rr_get_interval","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_create1","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"creat64","","",null,null],[5,"fstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"getrlimit64","","",null,null],[5,"lseek64","","",null,null],[5,"lstat64","","",null,null],[5,"mmap64","","",null,null],[5,"open64","","",null,null],[5,"openat64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"readdir64","","",null,null],[5,"readdir64_r","","",null,null],[5,"setrlimit64","","",null,null],[5,"stat64","","",null,null],[5,"truncate64","","",null,null],[5,"eventfd","","",null,null],[5,"sysinfo","","",null,null],[5,"fdopendir","","",null,null],[5,"mknodat","","",null,null],[5,"ppoll","","",null,null],[5,"pthread_condattr_getclock","","",null,null],[5,"pthread_condattr_setclock","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_getschedparam","","",null,null],[5,"pthread_setschedparam","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"unshare","","",null,null],[5,"setns","","",null,null],[5,"sem_timedwait","","",null,null],[5,"accept4","","",null,null],[5,"pthread_mutex_timedlock","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"ptsname_r","","",null,null],[5,"clearenv","","",null,null],[5,"waitid","","",null,null],[5,"sigsuspend","","",null,null],[5,"setreuid","","",null,null],[5,"setregid","","",null,null],[5,"getresuid","","",null,null],[5,"getresgid","","",null,null],[5,"personality","","",null,null],[5,"swapon","","",null,null],[5,"swapoff","","",null,null],[5,"acct","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"vfork","","",null,null],[5,"sethostname","","",null,null],[5,"setresgid","","",null,null],[5,"setresuid","","",null,null],[5,"wait4","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"execvpe","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"lio_listio","","",null,null],[5,"lutimes","","",null,null],[5,"setpwent","","",null,null],[5,"getpwent","","",null,null],[5,"setspent","","",null,null],[5,"endspent","","",null,null],[5,"getspent","","",null,null],[5,"getspnam","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"ftok","","",null,null],[5,"semget","","",null,null],[5,"semop","","",null,null],[5,"semctl","","",null,null],[5,"msgctl","","",null,null],[5,"msgget","","",null,null],[5,"msgrcv","","",null,null],[5,"msgsnd","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"nl_langinfo_l","","",null,null],[5,"getnameinfo","","",null,null],[5,"pthread_setschedprio","","",null,null],[5,"prlimit","","",null,null],[5,"prlimit64","","",null,null],[5,"getloadavg","","",null,null],[5,"process_vm_readv","","",null,null],[5,"process_vm_writev","","",null,null],[5,"reboot","","",null,null],[5,"setfsgid","","",null,null],[5,"setfsuid","","",null,null],[5,"mkfifoat","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"sync_file_range","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"mremap","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"vhangup","","",null,null],[5,"sendmmsg","","",null,null],[5,"recvmmsg","","",null,null],[5,"sync","","",null,null],[5,"utmpxname","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"getpt","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"pthread_getaffinity_np","","",null,null],[5,"pthread_setaffinity_np","","",null,null],[5,"pthread_rwlockattr_getkind_np","","",null,null],[5,"pthread_rwlockattr_setkind_np","","",null,null],[5,"sched_getcpu","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[5,"iopl","","",null,null],[5,"ioperm","","",null,null],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"stat64"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpxreg"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"_libc_xmmreg"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"_libc_fpstate"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"user_fpregs_struct"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"user_regs_struct"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"user"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"sysinfo"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"msqid_ds"}}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"aiocb"}}],[11,"clone","","",63,{"inputs":[{"name":"self"}],"output":{"name":"__exit_status"}}],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"__timeval"}}],[11,"clone","","",65,{"inputs":[{"name":"self"}],"output":{"name":"utmpx"}}],[11,"clone","","",66,{"inputs":[{"name":"self"}],"output":{"name":"sigaction"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"stack_t"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"glob64_t"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"statfs"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"msghdr"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"cmsghdr"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"flock"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"sem_t"}}],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"dirent"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"dirent64"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"rlimit64"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"glob_t"}}],[11,"clone","","",37,{"inputs":[{"name":"self"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",94,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",95,{"inputs":[{"name":"self"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"pthread_rwlockattr_t"}}],[11,"clone","","",97,{"inputs":[{"name":"self"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",98,{"inputs":[{"name":"self"}],"output":{"name":"pthread_condattr_t"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"passwd"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"spwd"}}],[11,"clone","","",40,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"clone","","",41,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[11,"clone","","",42,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"fsid_t"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"mq_attr"}}],[11,"clone","","",100,{"inputs":[{"name":"self"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",44,{"inputs":[{"name":"self"}],"output":{"name":"if_nameindex"}}],[11,"clone","","",45,{"inputs":[{"name":"self"}],"output":{"name":"msginfo"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"mmsghdr"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"sembuf"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"input_event"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"input_id"}}],[11,"clone","","",50,{"inputs":[{"name":"self"}],"output":{"name":"input_absinfo"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"input_keymap_entry"}}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"input_mask"}}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"ff_replay"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ff_trigger"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"ff_envelope"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ff_constant_effect"}}],[11,"clone","","",57,{"inputs":[{"name":"self"}],"output":{"name":"ff_ramp_effect"}}],[11,"clone","","",58,{"inputs":[{"name":"self"}],"output":{"name":"ff_condition_effect"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"ff_periodic_effect"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"ff_rumble_effect"}}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"ff_effect"}}],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"addrinfo"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"fd_set"}}],[11,"clone","","",26,{"inputs":[{"name":"self"}],"output":{"name":"tm"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"sched_param"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"dl_info"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"epoll_event"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"lconv"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"group"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"utimbuf"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"rlimit"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"rusage"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"hostent"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"iovec"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"clone","","",15,{"inputs":[{"name":"self"}],"output":{"name":"sigval"}}],[11,"clone","","",16,{"inputs":[{"name":"self"}],"output":{"name":"itimerval"}}],[11,"clone","","",17,{"inputs":[{"name":"self"}],"output":{"name":"tms"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"clockid_t","","",null,null],[6,"key_t","","",null,null],[6,"id_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"msgqnum_t","","",null,null],[6,"msglen_t","","",null,null],[6,"nfds_t","","",null,null],[6,"nl_item","","",null,null],[6,"idtype_t","","",null,null],[6,"__u8","","",null,null],[6,"__u16","","",null,null],[6,"__s16","","",null,null],[6,"__u32","","",null,null],[6,"__s32","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"__priority_which_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"greg_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"__u64","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_SETLEASE","","",null,null],[17,"F_GETLEASE","","",null,null],[17,"F_NOTIFY","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_SETPIPE_SZ","","",null,null],[17,"F_GETPIPE_SZ","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"CLOCK_MONOTONIC_RAW","","",null,null],[17,"CLOCK_REALTIME_COARSE","","",null,null],[17,"CLOCK_MONOTONIC_COARSE","","",null,null],[17,"CLOCK_BOOTTIME","","",null,null],[17,"CLOCK_REALTIME_ALARM","","",null,null],[17,"CLOCK_BOOTTIME_ALARM","","",null,null],[17,"TIMER_ABSTIME","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SCM_CREDENTIALS","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_MASTER","","",null,null],[17,"IFF_SLAVE","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"IFF_PORTSEL","","",null,null],[17,"IFF_AUTOMEDIA","","",null,null],[17,"IFF_DYNAMIC","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_ICMPV6","","",null,null],[17,"SOL_RAW","","",null,null],[17,"SOL_DECNET","","",null,null],[17,"SOL_X25","","",null,null],[17,"SOL_PACKET","","",null,null],[17,"SOL_ATM","","",null,null],[17,"SOL_AAL","","",null,null],[17,"SOL_IRDA","","",null,null],[17,"SOL_NETBEUI","","",null,null],[17,"SOL_LLC","","",null,null],[17,"SOL_DCCP","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"SOL_TIPC","","",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_AX25","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_NETROM","","",null,null],[17,"AF_BRIDGE","","",null,null],[17,"AF_ATMPVC","","",null,null],[17,"AF_X25","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_ROSE","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_NETBEUI","","",null,null],[17,"AF_SECURITY","","",null,null],[17,"AF_KEY","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_PACKET","","",null,null],[17,"AF_ASH","","",null,null],[17,"AF_ECONET","","",null,null],[17,"AF_ATMSVC","","",null,null],[17,"AF_RDS","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_IRDA","","",null,null],[17,"AF_PPPOX","","",null,null],[17,"AF_WANPIPE","","",null,null],[17,"AF_LLC","","",null,null],[17,"AF_CAN","","",null,null],[17,"AF_TIPC","","",null,null],[17,"AF_BLUETOOTH","","",null,null],[17,"AF_IUCV","","",null,null],[17,"AF_RXRPC","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_PHONET","","",null,null],[17,"AF_IEEE802154","","",null,null],[17,"AF_CAIF","","",null,null],[17,"AF_ALG","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_AX25","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_NETROM","","",null,null],[17,"PF_BRIDGE","","",null,null],[17,"PF_ATMPVC","","",null,null],[17,"PF_X25","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_ROSE","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_NETBEUI","","",null,null],[17,"PF_SECURITY","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_NETLINK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_PACKET","","",null,null],[17,"PF_ASH","","",null,null],[17,"PF_ECONET","","",null,null],[17,"PF_ATMSVC","","",null,null],[17,"PF_RDS","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_IRDA","","",null,null],[17,"PF_PPPOX","","",null,null],[17,"PF_WANPIPE","","",null,null],[17,"PF_LLC","","",null,null],[17,"PF_CAN","","",null,null],[17,"PF_TIPC","","",null,null],[17,"PF_BLUETOOTH","","",null,null],[17,"PF_IUCV","","",null,null],[17,"PF_RXRPC","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_PHONET","","",null,null],[17,"PF_IEEE802154","","",null,null],[17,"PF_CAIF","","",null,null],[17,"PF_ALG","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_FIN","","",null,null],[17,"MSG_SYN","","",null,null],[17,"MSG_CONFIRM","","",null,null],[17,"MSG_RST","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_NOSIGNAL","","",null,null],[17,"MSG_MORE","","",null,null],[17,"MSG_WAITFORONE","","",null,null],[17,"MSG_FASTOPEN","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"CR0","","",null,null],[17,"FF0","","",null,null],[17,"BS0","","",null,null],[17,"VT0","","",null,null],[17,"VERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VLNEXT","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"CS5","","",null,null],[17,"CMSPAR","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHO","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"SI_LOAD_SHIFT","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"CODESET","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"_PC_SYNC_IO","","",null,null],[17,"_PC_ASYNC_IO","","",null,null],[17,"_PC_PRIO_IO","","",null,null],[17,"_PC_SOCK_MAXBUF","","",null,null],[17,"_PC_FILESIZEBITS","","",null,null],[17,"_PC_REC_INCR_XFER_SIZE","","",null,null],[17,"_PC_REC_MAX_XFER_SIZE","","",null,null],[17,"_PC_REC_MIN_XFER_SIZE","","",null,null],[17,"_PC_REC_XFER_ALIGN","","",null,null],[17,"_PC_ALLOC_SIZE_MIN","","",null,null],[17,"_PC_SYMLINK_MAX","","",null,null],[17,"_PC_2_SYMLINKS","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_UIO_MAXIOV","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"_SC_AVPHYS_PAGES","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XOPEN_XPG2","","",null,null],[17,"_SC_XOPEN_XPG3","","",null,null],[17,"_SC_XOPEN_XPG4","","",null,null],[17,"_SC_NZERO","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_STREAMS","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_V7_ILP32_OFF32","","",null,null],[17,"_SC_V7_ILP32_OFFBIG","","",null,null],[17,"_SC_V7_LP64_OFF64","","",null,null],[17,"_SC_V7_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"AF_IB","","",null,null],[17,"AF_MPLS","","",null,null],[17,"AF_NFC","","",null,null],[17,"AF_VSOCK","","",null,null],[17,"PF_IB","","",null,null],[17,"PF_MPLS","","",null,null],[17,"PF_NFC","","",null,null],[17,"PF_VSOCK","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"MSG_STAT","","",null,null],[17,"MSG_INFO","","",null,null],[17,"MSG_NOERROR","","",null,null],[17,"MSG_EXCEPT","","",null,null],[17,"MSG_COPY","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"RB_AUTOBOOT","","",null,null],[17,"RB_HALT_SYSTEM","","",null,null],[17,"RB_ENABLE_CAD","","",null,null],[17,"RB_DISABLE_CAD","","",null,null],[17,"RB_POWER_OFF","","",null,null],[17,"RB_SW_SUSPEND","","",null,null],[17,"RB_KEXEC","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",null,null],[17,"SYNC_FILE_RANGE_WRITE","","",null,null],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"MREMAP_MAYMOVE","","",null,null],[17,"MREMAP_FIXED","","",null,null],[17,"PR_SET_PDEATHSIG","","",null,null],[17,"PR_GET_PDEATHSIG","","",null,null],[17,"PR_GET_DUMPABLE","","",null,null],[17,"PR_SET_DUMPABLE","","",null,null],[17,"PR_GET_UNALIGN","","",null,null],[17,"PR_SET_UNALIGN","","",null,null],[17,"PR_UNALIGN_NOPRINT","","",null,null],[17,"PR_UNALIGN_SIGBUS","","",null,null],[17,"PR_GET_KEEPCAPS","","",null,null],[17,"PR_SET_KEEPCAPS","","",null,null],[17,"PR_GET_FPEMU","","",null,null],[17,"PR_SET_FPEMU","","",null,null],[17,"PR_FPEMU_NOPRINT","","",null,null],[17,"PR_FPEMU_SIGFPE","","",null,null],[17,"PR_GET_FPEXC","","",null,null],[17,"PR_SET_FPEXC","","",null,null],[17,"PR_FP_EXC_SW_ENABLE","","",null,null],[17,"PR_FP_EXC_DIV","","",null,null],[17,"PR_FP_EXC_OVF","","",null,null],[17,"PR_FP_EXC_UND","","",null,null],[17,"PR_FP_EXC_RES","","",null,null],[17,"PR_FP_EXC_INV","","",null,null],[17,"PR_FP_EXC_DISABLED","","",null,null],[17,"PR_FP_EXC_NONRECOV","","",null,null],[17,"PR_FP_EXC_ASYNC","","",null,null],[17,"PR_FP_EXC_PRECISE","","",null,null],[17,"PR_GET_TIMING","","",null,null],[17,"PR_SET_TIMING","","",null,null],[17,"PR_TIMING_STATISTICAL","","",null,null],[17,"PR_TIMING_TIMESTAMP","","",null,null],[17,"PR_SET_NAME","","",null,null],[17,"PR_GET_NAME","","",null,null],[17,"PR_GET_ENDIAN","","",null,null],[17,"PR_SET_ENDIAN","","",null,null],[17,"PR_ENDIAN_BIG","","",null,null],[17,"PR_ENDIAN_LITTLE","","",null,null],[17,"PR_ENDIAN_PPC_LITTLE","","",null,null],[17,"PR_GET_SECCOMP","","",null,null],[17,"PR_SET_SECCOMP","","",null,null],[17,"PR_CAPBSET_READ","","",null,null],[17,"PR_CAPBSET_DROP","","",null,null],[17,"PR_GET_TSC","","",null,null],[17,"PR_SET_TSC","","",null,null],[17,"PR_TSC_ENABLE","","",null,null],[17,"PR_TSC_SIGSEGV","","",null,null],[17,"PR_GET_SECUREBITS","","",null,null],[17,"PR_SET_SECUREBITS","","",null,null],[17,"PR_SET_TIMERSLACK","","",null,null],[17,"PR_GET_TIMERSLACK","","",null,null],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",null,null],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",null,null],[17,"PR_MCE_KILL","","",null,null],[17,"PR_MCE_KILL_CLEAR","","",null,null],[17,"PR_MCE_KILL_SET","","",null,null],[17,"PR_MCE_KILL_LATE","","",null,null],[17,"PR_MCE_KILL_EARLY","","",null,null],[17,"PR_MCE_KILL_DEFAULT","","",null,null],[17,"PR_MCE_KILL_GET","","",null,null],[17,"PR_SET_MM","","",null,null],[17,"PR_SET_MM_START_CODE","","",null,null],[17,"PR_SET_MM_END_CODE","","",null,null],[17,"PR_SET_MM_START_DATA","","",null,null],[17,"PR_SET_MM_END_DATA","","",null,null],[17,"PR_SET_MM_START_STACK","","",null,null],[17,"PR_SET_MM_START_BRK","","",null,null],[17,"PR_SET_MM_BRK","","",null,null],[17,"PR_SET_MM_ARG_START","","",null,null],[17,"PR_SET_MM_ARG_END","","",null,null],[17,"PR_SET_MM_ENV_START","","",null,null],[17,"PR_SET_MM_ENV_END","","",null,null],[17,"PR_SET_MM_AUXV","","",null,null],[17,"PR_SET_MM_EXE_FILE","","",null,null],[17,"PR_SET_MM_MAP","","",null,null],[17,"PR_SET_MM_MAP_SIZE","","",null,null],[17,"PR_SET_PTRACER","","",null,null],[17,"PR_SET_CHILD_SUBREAPER","","",null,null],[17,"PR_GET_CHILD_SUBREAPER","","",null,null],[17,"PR_SET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_NO_NEW_PRIVS","","",null,null],[17,"PR_GET_TID_ADDRESS","","",null,null],[17,"PR_SET_THP_DISABLE","","",null,null],[17,"PR_GET_THP_DISABLE","","",null,null],[17,"PR_MPX_ENABLE_MANAGEMENT","","",null,null],[17,"PR_MPX_DISABLE_MANAGEMENT","","",null,null],[17,"PR_SET_FP_MODE","","",null,null],[17,"PR_GET_FP_MODE","","",null,null],[17,"PR_FP_MODE_FR","","",null,null],[17,"PR_FP_MODE_FRE","","",null,null],[17,"PR_CAP_AMBIENT","","",null,null],[17,"PR_CAP_AMBIENT_IS_SET","","",null,null],[17,"PR_CAP_AMBIENT_RAISE","","",null,null],[17,"PR_CAP_AMBIENT_LOWER","","",null,null],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",null,null],[17,"ITIMER_REAL","","",null,null],[17,"ITIMER_VIRTUAL","","",null,null],[17,"ITIMER_PROF","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"FALLOC_FL_COLLAPSE_RANGE","","",null,null],[17,"FALLOC_FL_ZERO_RANGE","","",null,null],[17,"FALLOC_FL_INSERT_RANGE","","",null,null],[17,"FALLOC_FL_UNSHARE_RANGE","","",null,null],[17,"ENOATTR","","",null,null],[17,"__UT_LINESIZE","","",null,null],[17,"__UT_NAMESIZE","","",null,null],[17,"__UT_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOL_RXRPC","","",null,null],[17,"SOL_PPPOL2TP","","",null,null],[17,"SOL_BLUETOOTH","","",null,null],[17,"SOL_PNPIPE","","",null,null],[17,"SOL_RDS","","",null,null],[17,"SOL_IUCV","","",null,null],[17,"SOL_CAIF","","",null,null],[17,"SOL_ALG","","",null,null],[17,"SOL_NFC","","",null,null],[17,"MSG_TRYHARD","","",null,null],[17,"LC_PAPER","","",null,null],[17,"LC_NAME","","",null,null],[17,"LC_ADDRESS","","",null,null],[17,"LC_TELEPHONE","","",null,null],[17,"LC_MEASUREMENT","","",null,null],[17,"LC_IDENTIFICATION","","",null,null],[17,"LC_PAPER_MASK","","",null,null],[17,"LC_NAME_MASK","","",null,null],[17,"LC_ADDRESS_MASK","","",null,null],[17,"LC_TELEPHONE_MASK","","",null,null],[17,"LC_MEASUREMENT_MASK","","",null,null],[17,"LC_IDENTIFICATION_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGEV_THREAD_ID","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_EQUIV_CLASS_MAX","","",null,null],[17,"_SC_CHARCLASS_NAME_MAX","","",null,null],[17,"_SC_PII","","",null,null],[17,"_SC_PII_XTI","","",null,null],[17,"_SC_PII_SOCKET","","",null,null],[17,"_SC_PII_INTERNET","","",null,null],[17,"_SC_PII_OSI","","",null,null],[17,"_SC_POLL","","",null,null],[17,"_SC_SELECT","","",null,null],[17,"_SC_PII_INTERNET_STREAM","","",null,null],[17,"_SC_PII_INTERNET_DGRAM","","",null,null],[17,"_SC_PII_OSI_COTS","","",null,null],[17,"_SC_PII_OSI_CLTS","","",null,null],[17,"_SC_PII_OSI_M","","",null,null],[17,"_SC_T_IOV_MAX","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"_SC_CHAR_BIT","","",null,null],[17,"_SC_CHAR_MAX","","",null,null],[17,"_SC_CHAR_MIN","","",null,null],[17,"_SC_INT_MAX","","",null,null],[17,"_SC_INT_MIN","","",null,null],[17,"_SC_LONG_BIT","","",null,null],[17,"_SC_WORD_BIT","","",null,null],[17,"_SC_MB_LEN_MAX","","",null,null],[17,"_SC_SSIZE_MAX","","",null,null],[17,"_SC_SCHAR_MAX","","",null,null],[17,"_SC_SCHAR_MIN","","",null,null],[17,"_SC_SHRT_MAX","","",null,null],[17,"_SC_SHRT_MIN","","",null,null],[17,"_SC_UCHAR_MAX","","",null,null],[17,"_SC_UINT_MAX","","",null,null],[17,"_SC_ULONG_MAX","","",null,null],[17,"_SC_USHRT_MAX","","",null,null],[17,"_SC_NL_ARGMAX","","",null,null],[17,"_SC_NL_LANGMAX","","",null,null],[17,"_SC_NL_MSGMAX","","",null,null],[17,"_SC_NL_NMAX","","",null,null],[17,"_SC_NL_SETMAX","","",null,null],[17,"_SC_NL_TEXTMAX","","",null,null],[17,"_SC_BASE","","",null,null],[17,"_SC_C_LANG_SUPPORT","","",null,null],[17,"_SC_C_LANG_SUPPORT_R","","",null,null],[17,"_SC_DEVICE_IO","","",null,null],[17,"_SC_DEVICE_SPECIFIC","","",null,null],[17,"_SC_DEVICE_SPECIFIC_R","","",null,null],[17,"_SC_FD_MGMT","","",null,null],[17,"_SC_FIFO","","",null,null],[17,"_SC_PIPE","","",null,null],[17,"_SC_FILE_ATTRIBUTES","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_FILE_SYSTEM","","",null,null],[17,"_SC_MULTI_PROCESS","","",null,null],[17,"_SC_SINGLE_PROCESS","","",null,null],[17,"_SC_NETWORKING","","",null,null],[17,"_SC_REGEX_VERSION","","",null,null],[17,"_SC_SIGNALS","","",null,null],[17,"_SC_SYSTEM_DATABASE","","",null,null],[17,"_SC_SYSTEM_DATABASE_R","","",null,null],[17,"_SC_USER_GROUPS","","",null,null],[17,"_SC_USER_GROUPS_R","","",null,null],[17,"_SC_LEVEL1_ICACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_SIZE","","",null,null],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",null,null],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL2_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL3_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_SIZE","","",null,null],[17,"_SC_LEVEL4_CACHE_ASSOC","","",null,null],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"SEEK_DATA","","",null,null],[17,"SEEK_HOLE","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"LINUX_REBOOT_MAGIC1","","",null,null],[17,"LINUX_REBOOT_MAGIC2","","",null,null],[17,"LINUX_REBOOT_MAGIC2A","","",null,null],[17,"LINUX_REBOOT_MAGIC2B","","",null,null],[17,"LINUX_REBOOT_MAGIC2C","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART","","",null,null],[17,"LINUX_REBOOT_CMD_HALT","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_ON","","",null,null],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",null,null],[17,"LINUX_REBOOT_CMD_RESTART2","","",null,null],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",null,null],[17,"LINUX_REBOOT_CMD_KEXEC","","",null,null],[17,"NETLINK_ROUTE","","",null,null],[17,"NETLINK_UNUSED","","",null,null],[17,"NETLINK_USERSOCK","","",null,null],[17,"NETLINK_FIREWALL","","",null,null],[17,"NETLINK_SOCK_DIAG","","",null,null],[17,"NETLINK_NFLOG","","",null,null],[17,"NETLINK_XFRM","","",null,null],[17,"NETLINK_SELINUX","","",null,null],[17,"NETLINK_ISCSI","","",null,null],[17,"NETLINK_AUDIT","","",null,null],[17,"NETLINK_FIB_LOOKUP","","",null,null],[17,"NETLINK_CONNECTOR","","",null,null],[17,"NETLINK_NETFILTER","","",null,null],[17,"NETLINK_IP6_FW","","",null,null],[17,"NETLINK_DNRTMSG","","",null,null],[17,"NETLINK_KOBJECT_UEVENT","","",null,null],[17,"NETLINK_GENERIC","","",null,null],[17,"NETLINK_SCSITRANSPORT","","",null,null],[17,"NETLINK_ECRYPTFS","","",null,null],[17,"NETLINK_RDMA","","",null,null],[17,"NETLINK_CRYPTO","","",null,null],[17,"NETLINK_INET_DIAG","","",null,null],[17,"MAX_LINKS","","",null,null],[17,"NLM_F_REQUEST","","",null,null],[17,"NLM_F_MULTI","","",null,null],[17,"NLM_F_ACK","","",null,null],[17,"NLM_F_ECHO","","",null,null],[17,"NLM_F_DUMP_INTR","","",null,null],[17,"NLM_F_DUMP_FILTERED","","",null,null],[17,"NLM_F_ROOT","","",null,null],[17,"NLM_F_MATCH","","",null,null],[17,"NLM_F_ATOMIC","","",null,null],[17,"NLM_F_DUMP","","",null,null],[17,"NLM_F_REPLACE","","",null,null],[17,"NLM_F_EXCL","","",null,null],[17,"NLM_F_CREATE","","",null,null],[17,"NLM_F_APPEND","","",null,null],[17,"NLMSG_NOOP","","",null,null],[17,"NLMSG_ERROR","","",null,null],[17,"NLMSG_DONE","","",null,null],[17,"NLMSG_OVERRUN","","",null,null],[17,"NLMSG_MIN_TYPE","","",null,null],[17,"NETLINK_ADD_MEMBERSHIP","","",null,null],[17,"NETLINK_DROP_MEMBERSHIP","","",null,null],[17,"NETLINK_PKTINFO","","",null,null],[17,"NETLINK_BROADCAST_ERROR","","",null,null],[17,"NETLINK_NO_ENOBUFS","","",null,null],[17,"NETLINK_RX_RING","","",null,null],[17,"NETLINK_TX_RING","","",null,null],[17,"NETLINK_LISTEN_ALL_NSID","","",null,null],[17,"NETLINK_LIST_MEMBERSHIPS","","",null,null],[17,"NETLINK_CAP_ACK","","",null,null],[17,"NLA_F_NESTED","","",null,null],[17,"NLA_F_NET_BYTEORDER","","",null,null],[17,"NLA_TYPE_MASK","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_PATH","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_NO_CHECK","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_SECURITY_AUTHENTICATION","","",null,null],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",null,null],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_ATTACH_FILTER","","",null,null],[17,"SO_DETACH_FILTER","","",null,null],[17,"SO_GET_FILTER","","",null,null],[17,"SO_PEERNAME","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_PEERSEC","","",null,null],[17,"SO_PASSSEC","","",null,null],[17,"SO_TIMESTAMPNS","","",null,null],[17,"SCM_TIMESTAMPNS","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_TIMESTAMPING","","",null,null],[17,"SCM_TIMESTAMPING","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_WIFI_STATUS","","",null,null],[17,"SCM_WIFI_STATUS","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_NOFCS","","",null,null],[17,"SO_LOCK_FILTER","","",null,null],[17,"SO_SELECT_ERR_QUEUE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_MAX_PACING_RATE","","",null,null],[17,"SO_BPF_EXTENSIONS","","",null,null],[17,"SO_INCOMING_CPU","","",null,null],[17,"SO_ATTACH_BPF","","",null,null],[17,"SO_DETACH_BPF","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCCONS","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"NCCS","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_O_EXITKILL","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[17,"PTRACE_O_SUSPEND_SECCOMP","","",null,null],[17,"PTRACE_PEEKSIGINFO_SHARED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"MINSIGSTKSZ","","",null,null],[17,"CBAUD","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF1","","",null,null],[17,"BS1","","",null,null],[17,"VT1","","",null,null],[17,"VWERASE","","",null,null],[17,"VREPRINT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"VSWTC","","",null,null],[17,"OLCUC","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"XTABS","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"B57600","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"B460800","","",null,null],[17,"B500000","","",null,null],[17,"B576000","","",null,null],[17,"B921600","","",null,null],[17,"B1000000","","",null,null],[17,"B1152000","","",null,null],[17,"B1500000","","",null,null],[17,"B2000000","","",null,null],[17,"B2500000","","",null,null],[17,"B3000000","","",null,null],[17,"B3500000","","",null,null],[17,"B4000000","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"EXTPROC","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"FIONREAD","","",null,null],[17,"SYS_read","","",null,null],[17,"SYS_write","","",null,null],[17,"SYS_open","","",null,null],[17,"SYS_close","","",null,null],[17,"SYS_stat","","",null,null],[17,"SYS_fstat","","",null,null],[17,"SYS_lstat","","",null,null],[17,"SYS_poll","","",null,null],[17,"SYS_lseek","","",null,null],[17,"SYS_mmap","","",null,null],[17,"SYS_mprotect","","",null,null],[17,"SYS_munmap","","",null,null],[17,"SYS_brk","","",null,null],[17,"SYS_rt_sigaction","","",null,null],[17,"SYS_rt_sigprocmask","","",null,null],[17,"SYS_rt_sigreturn","","",null,null],[17,"SYS_ioctl","","",null,null],[17,"SYS_pread64","","",null,null],[17,"SYS_pwrite64","","",null,null],[17,"SYS_readv","","",null,null],[17,"SYS_writev","","",null,null],[17,"SYS_access","","",null,null],[17,"SYS_pipe","","",null,null],[17,"SYS_select","","",null,null],[17,"SYS_sched_yield","","",null,null],[17,"SYS_mremap","","",null,null],[17,"SYS_msync","","",null,null],[17,"SYS_mincore","","",null,null],[17,"SYS_madvise","","",null,null],[17,"SYS_shmget","","",null,null],[17,"SYS_shmat","","",null,null],[17,"SYS_shmctl","","",null,null],[17,"SYS_dup","","",null,null],[17,"SYS_dup2","","",null,null],[17,"SYS_pause","","",null,null],[17,"SYS_nanosleep","","",null,null],[17,"SYS_getitimer","","",null,null],[17,"SYS_alarm","","",null,null],[17,"SYS_setitimer","","",null,null],[17,"SYS_getpid","","",null,null],[17,"SYS_sendfile","","",null,null],[17,"SYS_socket","","",null,null],[17,"SYS_connect","","",null,null],[17,"SYS_accept","","",null,null],[17,"SYS_sendto","","",null,null],[17,"SYS_recvfrom","","",null,null],[17,"SYS_sendmsg","","",null,null],[17,"SYS_recvmsg","","",null,null],[17,"SYS_shutdown","","",null,null],[17,"SYS_bind","","",null,null],[17,"SYS_listen","","",null,null],[17,"SYS_getsockname","","",null,null],[17,"SYS_getpeername","","",null,null],[17,"SYS_socketpair","","",null,null],[17,"SYS_setsockopt","","",null,null],[17,"SYS_getsockopt","","",null,null],[17,"SYS_clone","","",null,null],[17,"SYS_fork","","",null,null],[17,"SYS_vfork","","",null,null],[17,"SYS_execve","","",null,null],[17,"SYS_exit","","",null,null],[17,"SYS_wait4","","",null,null],[17,"SYS_kill","","",null,null],[17,"SYS_uname","","",null,null],[17,"SYS_semget","","",null,null],[17,"SYS_semop","","",null,null],[17,"SYS_semctl","","",null,null],[17,"SYS_shmdt","","",null,null],[17,"SYS_msgget","","",null,null],[17,"SYS_msgsnd","","",null,null],[17,"SYS_msgrcv","","",null,null],[17,"SYS_msgctl","","",null,null],[17,"SYS_fcntl","","",null,null],[17,"SYS_flock","","",null,null],[17,"SYS_fsync","","",null,null],[17,"SYS_fdatasync","","",null,null],[17,"SYS_truncate","","",null,null],[17,"SYS_ftruncate","","",null,null],[17,"SYS_getdents","","",null,null],[17,"SYS_getcwd","","",null,null],[17,"SYS_chdir","","",null,null],[17,"SYS_fchdir","","",null,null],[17,"SYS_rename","","",null,null],[17,"SYS_mkdir","","",null,null],[17,"SYS_rmdir","","",null,null],[17,"SYS_creat","","",null,null],[17,"SYS_link","","",null,null],[17,"SYS_unlink","","",null,null],[17,"SYS_symlink","","",null,null],[17,"SYS_readlink","","",null,null],[17,"SYS_chmod","","",null,null],[17,"SYS_fchmod","","",null,null],[17,"SYS_chown","","",null,null],[17,"SYS_fchown","","",null,null],[17,"SYS_lchown","","",null,null],[17,"SYS_umask","","",null,null],[17,"SYS_gettimeofday","","",null,null],[17,"SYS_getrlimit","","",null,null],[17,"SYS_getrusage","","",null,null],[17,"SYS_sysinfo","","",null,null],[17,"SYS_times","","",null,null],[17,"SYS_ptrace","","",null,null],[17,"SYS_getuid","","",null,null],[17,"SYS_syslog","","",null,null],[17,"SYS_getgid","","",null,null],[17,"SYS_setuid","","",null,null],[17,"SYS_setgid","","",null,null],[17,"SYS_geteuid","","",null,null],[17,"SYS_getegid","","",null,null],[17,"SYS_setpgid","","",null,null],[17,"SYS_getppid","","",null,null],[17,"SYS_getpgrp","","",null,null],[17,"SYS_setsid","","",null,null],[17,"SYS_setreuid","","",null,null],[17,"SYS_setregid","","",null,null],[17,"SYS_getgroups","","",null,null],[17,"SYS_setgroups","","",null,null],[17,"SYS_setresuid","","",null,null],[17,"SYS_getresuid","","",null,null],[17,"SYS_setresgid","","",null,null],[17,"SYS_getresgid","","",null,null],[17,"SYS_getpgid","","",null,null],[17,"SYS_setfsuid","","",null,null],[17,"SYS_setfsgid","","",null,null],[17,"SYS_getsid","","",null,null],[17,"SYS_capget","","",null,null],[17,"SYS_capset","","",null,null],[17,"SYS_rt_sigpending","","",null,null],[17,"SYS_rt_sigtimedwait","","",null,null],[17,"SYS_rt_sigqueueinfo","","",null,null],[17,"SYS_rt_sigsuspend","","",null,null],[17,"SYS_sigaltstack","","",null,null],[17,"SYS_utime","","",null,null],[17,"SYS_mknod","","",null,null],[17,"SYS_uselib","","",null,null],[17,"SYS_personality","","",null,null],[17,"SYS_ustat","","",null,null],[17,"SYS_statfs","","",null,null],[17,"SYS_fstatfs","","",null,null],[17,"SYS_sysfs","","",null,null],[17,"SYS_getpriority","","",null,null],[17,"SYS_setpriority","","",null,null],[17,"SYS_sched_setparam","","",null,null],[17,"SYS_sched_getparam","","",null,null],[17,"SYS_sched_setscheduler","","",null,null],[17,"SYS_sched_getscheduler","","",null,null],[17,"SYS_sched_get_priority_max","","",null,null],[17,"SYS_sched_get_priority_min","","",null,null],[17,"SYS_sched_rr_get_interval","","",null,null],[17,"SYS_mlock","","",null,null],[17,"SYS_munlock","","",null,null],[17,"SYS_mlockall","","",null,null],[17,"SYS_munlockall","","",null,null],[17,"SYS_vhangup","","",null,null],[17,"SYS_modify_ldt","","",null,null],[17,"SYS_pivot_root","","",null,null],[17,"SYS__sysctl","","",null,null],[17,"SYS_prctl","","",null,null],[17,"SYS_arch_prctl","","",null,null],[17,"SYS_adjtimex","","",null,null],[17,"SYS_setrlimit","","",null,null],[17,"SYS_chroot","","",null,null],[17,"SYS_sync","","",null,null],[17,"SYS_acct","","",null,null],[17,"SYS_settimeofday","","",null,null],[17,"SYS_mount","","",null,null],[17,"SYS_umount2","","",null,null],[17,"SYS_swapon","","",null,null],[17,"SYS_swapoff","","",null,null],[17,"SYS_reboot","","",null,null],[17,"SYS_sethostname","","",null,null],[17,"SYS_setdomainname","","",null,null],[17,"SYS_iopl","","",null,null],[17,"SYS_ioperm","","",null,null],[17,"SYS_create_module","","",null,null],[17,"SYS_init_module","","",null,null],[17,"SYS_delete_module","","",null,null],[17,"SYS_get_kernel_syms","","",null,null],[17,"SYS_query_module","","",null,null],[17,"SYS_quotactl","","",null,null],[17,"SYS_nfsservctl","","",null,null],[17,"SYS_getpmsg","","",null,null],[17,"SYS_putpmsg","","",null,null],[17,"SYS_afs_syscall","","",null,null],[17,"SYS_tuxcall","","",null,null],[17,"SYS_security","","",null,null],[17,"SYS_gettid","","",null,null],[17,"SYS_readahead","","",null,null],[17,"SYS_setxattr","","",null,null],[17,"SYS_lsetxattr","","",null,null],[17,"SYS_fsetxattr","","",null,null],[17,"SYS_getxattr","","",null,null],[17,"SYS_lgetxattr","","",null,null],[17,"SYS_fgetxattr","","",null,null],[17,"SYS_listxattr","","",null,null],[17,"SYS_llistxattr","","",null,null],[17,"SYS_flistxattr","","",null,null],[17,"SYS_removexattr","","",null,null],[17,"SYS_lremovexattr","","",null,null],[17,"SYS_fremovexattr","","",null,null],[17,"SYS_tkill","","",null,null],[17,"SYS_time","","",null,null],[17,"SYS_futex","","",null,null],[17,"SYS_sched_setaffinity","","",null,null],[17,"SYS_sched_getaffinity","","",null,null],[17,"SYS_set_thread_area","","",null,null],[17,"SYS_io_setup","","",null,null],[17,"SYS_io_destroy","","",null,null],[17,"SYS_io_getevents","","",null,null],[17,"SYS_io_submit","","",null,null],[17,"SYS_io_cancel","","",null,null],[17,"SYS_get_thread_area","","",null,null],[17,"SYS_lookup_dcookie","","",null,null],[17,"SYS_epoll_create","","",null,null],[17,"SYS_epoll_ctl_old","","",null,null],[17,"SYS_epoll_wait_old","","",null,null],[17,"SYS_remap_file_pages","","",null,null],[17,"SYS_getdents64","","",null,null],[17,"SYS_set_tid_address","","",null,null],[17,"SYS_restart_syscall","","",null,null],[17,"SYS_semtimedop","","",null,null],[17,"SYS_fadvise64","","",null,null],[17,"SYS_timer_create","","",null,null],[17,"SYS_timer_settime","","",null,null],[17,"SYS_timer_gettime","","",null,null],[17,"SYS_timer_getoverrun","","",null,null],[17,"SYS_timer_delete","","",null,null],[17,"SYS_clock_settime","","",null,null],[17,"SYS_clock_gettime","","",null,null],[17,"SYS_clock_getres","","",null,null],[17,"SYS_clock_nanosleep","","",null,null],[17,"SYS_exit_group","","",null,null],[17,"SYS_epoll_wait","","",null,null],[17,"SYS_epoll_ctl","","",null,null],[17,"SYS_tgkill","","",null,null],[17,"SYS_utimes","","",null,null],[17,"SYS_vserver","","",null,null],[17,"SYS_mbind","","",null,null],[17,"SYS_set_mempolicy","","",null,null],[17,"SYS_get_mempolicy","","",null,null],[17,"SYS_mq_open","","",null,null],[17,"SYS_mq_unlink","","",null,null],[17,"SYS_mq_timedsend","","",null,null],[17,"SYS_mq_timedreceive","","",null,null],[17,"SYS_mq_notify","","",null,null],[17,"SYS_mq_getsetattr","","",null,null],[17,"SYS_kexec_load","","",null,null],[17,"SYS_waitid","","",null,null],[17,"SYS_add_key","","",null,null],[17,"SYS_request_key","","",null,null],[17,"SYS_keyctl","","",null,null],[17,"SYS_ioprio_set","","",null,null],[17,"SYS_ioprio_get","","",null,null],[17,"SYS_inotify_init","","",null,null],[17,"SYS_inotify_add_watch","","",null,null],[17,"SYS_inotify_rm_watch","","",null,null],[17,"SYS_migrate_pages","","",null,null],[17,"SYS_openat","","",null,null],[17,"SYS_mkdirat","","",null,null],[17,"SYS_mknodat","","",null,null],[17,"SYS_fchownat","","",null,null],[17,"SYS_futimesat","","",null,null],[17,"SYS_newfstatat","","",null,null],[17,"SYS_unlinkat","","",null,null],[17,"SYS_renameat","","",null,null],[17,"SYS_linkat","","",null,null],[17,"SYS_symlinkat","","",null,null],[17,"SYS_readlinkat","","",null,null],[17,"SYS_fchmodat","","",null,null],[17,"SYS_faccessat","","",null,null],[17,"SYS_pselect6","","",null,null],[17,"SYS_ppoll","","",null,null],[17,"SYS_unshare","","",null,null],[17,"SYS_set_robust_list","","",null,null],[17,"SYS_get_robust_list","","",null,null],[17,"SYS_splice","","",null,null],[17,"SYS_tee","","",null,null],[17,"SYS_sync_file_range","","",null,null],[17,"SYS_vmsplice","","",null,null],[17,"SYS_move_pages","","",null,null],[17,"SYS_utimensat","","",null,null],[17,"SYS_epoll_pwait","","",null,null],[17,"SYS_signalfd","","",null,null],[17,"SYS_timerfd_create","","",null,null],[17,"SYS_eventfd","","",null,null],[17,"SYS_fallocate","","",null,null],[17,"SYS_timerfd_settime","","",null,null],[17,"SYS_timerfd_gettime","","",null,null],[17,"SYS_accept4","","",null,null],[17,"SYS_signalfd4","","",null,null],[17,"SYS_eventfd2","","",null,null],[17,"SYS_epoll_create1","","",null,null],[17,"SYS_dup3","","",null,null],[17,"SYS_pipe2","","",null,null],[17,"SYS_inotify_init1","","",null,null],[17,"SYS_preadv","","",null,null],[17,"SYS_pwritev","","",null,null],[17,"SYS_rt_tgsigqueueinfo","","",null,null],[17,"SYS_perf_event_open","","",null,null],[17,"SYS_recvmmsg","","",null,null],[17,"SYS_fanotify_init","","",null,null],[17,"SYS_fanotify_mark","","",null,null],[17,"SYS_prlimit64","","",null,null],[17,"SYS_name_to_handle_at","","",null,null],[17,"SYS_open_by_handle_at","","",null,null],[17,"SYS_clock_adjtime","","",null,null],[17,"SYS_syncfs","","",null,null],[17,"SYS_sendmmsg","","",null,null],[17,"SYS_setns","","",null,null],[17,"SYS_getcpu","","",null,null],[17,"SYS_process_vm_readv","","",null,null],[17,"SYS_process_vm_writev","","",null,null],[17,"SYS_kcmp","","",null,null],[17,"SYS_finit_module","","",null,null],[17,"SYS_sched_setattr","","",null,null],[17,"SYS_sched_getattr","","",null,null],[17,"SYS_renameat2","","",null,null],[17,"SYS_seccomp","","",null,null],[17,"SYS_getrandom","","",null,null],[17,"SYS_memfd_create","","",null,null],[17,"SYS_kexec_file_load","","",null,null],[17,"SYS_bpf","","",null,null],[17,"SYS_execveat","","",null,null],[17,"SYS_userfaultfd","","",null,null],[17,"SYS_membarrier","","",null,null],[17,"SYS_mlock2","","",null,null],[17,"SYS_copy_file_range","","",null,null],[17,"SYS_preadv2","","",null,null],[17,"SYS_pwritev2","","",null,null],[17,"SYS_pkey_mprotect","","",null,null],[17,"SYS_pkey_alloc","","",null,null],[17,"SYS_pkey_free","","",null,null],[17,"R15","","",null,null],[17,"R14","","",null,null],[17,"R13","","",null,null],[17,"R12","","",null,null],[17,"RBP","","",null,null],[17,"RBX","","",null,null],[17,"R11","","",null,null],[17,"R10","","",null,null],[17,"R9","","",null,null],[17,"R8","","",null,null],[17,"RAX","","",null,null],[17,"RCX","","",null,null],[17,"RDX","","",null,null],[17,"RSI","","",null,null],[17,"RDI","","",null,null],[17,"ORIG_RAX","","",null,null],[17,"RIP","","",null,null],[17,"CS","","",null,null],[17,"EFLAGS","","",null,null],[17,"RSP","","",null,null],[17,"SS","","",null,null],[17,"FS_BASE","","",null,null],[17,"GS_BASE","","",null,null],[17,"DS","","",null,null],[17,"ES","","",null,null],[17,"FS","","",null,null],[17,"GS","","",null,null]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"spwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["nix"] = {"doc":"Rust friendly bindings to the various *nix system functions.","items":[[4,"Errno","nix","",null,null],[13,"UnknownErrno","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ECHRNG","","",0,null],[13,"EL2NSYNC","","",0,null],[13,"EL3HLT","","",0,null],[13,"EL3RST","","",0,null],[13,"ELNRNG","","",0,null],[13,"EUNATCH","","",0,null],[13,"ENOCSI","","",0,null],[13,"EL2HLT","","",0,null],[13,"EBADE","","",0,null],[13,"EBADR","","",0,null],[13,"EXFULL","","",0,null],[13,"ENOANO","","",0,null],[13,"EBADRQC","","",0,null],[13,"EBADSLT","","",0,null],[13,"EBFONT","","",0,null],[13,"ENOSTR","","",0,null],[13,"ENODATA","","",0,null],[13,"ETIME","","",0,null],[13,"ENOSR","","",0,null],[13,"ENONET","","",0,null],[13,"ENOPKG","","",0,null],[13,"EREMOTE","","",0,null],[13,"ENOLINK","","",0,null],[13,"EADV","","",0,null],[13,"ESRMNT","","",0,null],[13,"ECOMM","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EDOTDOT","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"ENOTUNIQ","","",0,null],[13,"EBADFD","","",0,null],[13,"EREMCHG","","",0,null],[13,"ELIBACC","","",0,null],[13,"ELIBBAD","","",0,null],[13,"ELIBSCN","","",0,null],[13,"ELIBMAX","","",0,null],[13,"ELIBEXEC","","",0,null],[13,"EILSEQ","","",0,null],[13,"ERESTART","","",0,null],[13,"ESTRPIPE","","",0,null],[13,"EUSERS","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"ESOCKTNOSUPPORT","","",0,null],[13,"EOPNOTSUPP","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ESHUTDOWN","","",0,null],[13,"ETOOMANYREFS","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTDOWN","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EUCLEAN","","",0,null],[13,"ENOTNAM","","",0,null],[13,"ENAVAIL","","",0,null],[13,"EISNAM","","",0,null],[13,"EREMOTEIO","","",0,null],[13,"EDQUOT","","",0,null],[13,"ENOMEDIUM","","",0,null],[13,"EMEDIUMTYPE","","",0,null],[13,"ECANCELED","","",0,null],[13,"ENOKEY","","",0,null],[13,"EKEYEXPIRED","","",0,null],[13,"EKEYREVOKED","","",0,null],[13,"EKEYREJECTED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[13,"ERFKILL","","",0,null],[13,"EHWPOISON","","",0,null],[4,"Error","","Nix Error Type",null,null],[13,"Sys","","",1,null],[13,"InvalidPath","","",1,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust's native String type, which failed because the string did not contain all valid UTF-8.",1,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance either use the libc bindings or consult the module documentation to see if there is a more appropriate interface available.",1,null],[0,"libc","","",null,null],[0,"errno","","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",0,null],[13,"EPERM","","",0,null],[13,"ENOENT","","",0,null],[13,"ESRCH","","",0,null],[13,"EINTR","","",0,null],[13,"EIO","","",0,null],[13,"ENXIO","","",0,null],[13,"E2BIG","","",0,null],[13,"ENOEXEC","","",0,null],[13,"EBADF","","",0,null],[13,"ECHILD","","",0,null],[13,"EAGAIN","","",0,null],[13,"ENOMEM","","",0,null],[13,"EACCES","","",0,null],[13,"EFAULT","","",0,null],[13,"ENOTBLK","","",0,null],[13,"EBUSY","","",0,null],[13,"EEXIST","","",0,null],[13,"EXDEV","","",0,null],[13,"ENODEV","","",0,null],[13,"ENOTDIR","","",0,null],[13,"EISDIR","","",0,null],[13,"EINVAL","","",0,null],[13,"ENFILE","","",0,null],[13,"EMFILE","","",0,null],[13,"ENOTTY","","",0,null],[13,"ETXTBSY","","",0,null],[13,"EFBIG","","",0,null],[13,"ENOSPC","","",0,null],[13,"ESPIPE","","",0,null],[13,"EROFS","","",0,null],[13,"EMLINK","","",0,null],[13,"EPIPE","","",0,null],[13,"EDOM","","",0,null],[13,"ERANGE","","",0,null],[13,"EDEADLK","","",0,null],[13,"ENAMETOOLONG","","",0,null],[13,"ENOLCK","","",0,null],[13,"ENOSYS","","",0,null],[13,"ENOTEMPTY","","",0,null],[13,"ELOOP","","",0,null],[13,"ENOMSG","","",0,null],[13,"EIDRM","","",0,null],[13,"ECHRNG","","",0,null],[13,"EL2NSYNC","","",0,null],[13,"EL3HLT","","",0,null],[13,"EL3RST","","",0,null],[13,"ELNRNG","","",0,null],[13,"EUNATCH","","",0,null],[13,"ENOCSI","","",0,null],[13,"EL2HLT","","",0,null],[13,"EBADE","","",0,null],[13,"EBADR","","",0,null],[13,"EXFULL","","",0,null],[13,"ENOANO","","",0,null],[13,"EBADRQC","","",0,null],[13,"EBADSLT","","",0,null],[13,"EBFONT","","",0,null],[13,"ENOSTR","","",0,null],[13,"ENODATA","","",0,null],[13,"ETIME","","",0,null],[13,"ENOSR","","",0,null],[13,"ENONET","","",0,null],[13,"ENOPKG","","",0,null],[13,"EREMOTE","","",0,null],[13,"ENOLINK","","",0,null],[13,"EADV","","",0,null],[13,"ESRMNT","","",0,null],[13,"ECOMM","","",0,null],[13,"EPROTO","","",0,null],[13,"EMULTIHOP","","",0,null],[13,"EDOTDOT","","",0,null],[13,"EBADMSG","","",0,null],[13,"EOVERFLOW","","",0,null],[13,"ENOTUNIQ","","",0,null],[13,"EBADFD","","",0,null],[13,"EREMCHG","","",0,null],[13,"ELIBACC","","",0,null],[13,"ELIBBAD","","",0,null],[13,"ELIBSCN","","",0,null],[13,"ELIBMAX","","",0,null],[13,"ELIBEXEC","","",0,null],[13,"EILSEQ","","",0,null],[13,"ERESTART","","",0,null],[13,"ESTRPIPE","","",0,null],[13,"EUSERS","","",0,null],[13,"ENOTSOCK","","",0,null],[13,"EDESTADDRREQ","","",0,null],[13,"EMSGSIZE","","",0,null],[13,"EPROTOTYPE","","",0,null],[13,"ENOPROTOOPT","","",0,null],[13,"EPROTONOSUPPORT","","",0,null],[13,"ESOCKTNOSUPPORT","","",0,null],[13,"EOPNOTSUPP","","",0,null],[13,"EPFNOSUPPORT","","",0,null],[13,"EAFNOSUPPORT","","",0,null],[13,"EADDRINUSE","","",0,null],[13,"EADDRNOTAVAIL","","",0,null],[13,"ENETDOWN","","",0,null],[13,"ENETUNREACH","","",0,null],[13,"ENETRESET","","",0,null],[13,"ECONNABORTED","","",0,null],[13,"ECONNRESET","","",0,null],[13,"ENOBUFS","","",0,null],[13,"EISCONN","","",0,null],[13,"ENOTCONN","","",0,null],[13,"ESHUTDOWN","","",0,null],[13,"ETOOMANYREFS","","",0,null],[13,"ETIMEDOUT","","",0,null],[13,"ECONNREFUSED","","",0,null],[13,"EHOSTDOWN","","",0,null],[13,"EHOSTUNREACH","","",0,null],[13,"EALREADY","","",0,null],[13,"EINPROGRESS","","",0,null],[13,"ESTALE","","",0,null],[13,"EUCLEAN","","",0,null],[13,"ENOTNAM","","",0,null],[13,"ENAVAIL","","",0,null],[13,"EISNAM","","",0,null],[13,"EREMOTEIO","","",0,null],[13,"EDQUOT","","",0,null],[13,"ENOMEDIUM","","",0,null],[13,"EMEDIUMTYPE","","",0,null],[13,"ECANCELED","","",0,null],[13,"ENOKEY","","",0,null],[13,"EKEYEXPIRED","","",0,null],[13,"EKEYREVOKED","","",0,null],[13,"EKEYREJECTED","","",0,null],[13,"EOWNERDEAD","","",0,null],[13,"ENOTRECOVERABLE","","",0,null],[13,"ERFKILL","","",0,null],[13,"EHWPOISON","","",0,null],[5,"from_i32","","",null,{"inputs":[{"name":"i32"}],"output":{"name":"errno"}}],[5,"errno","","Returns the platform-specific value of errno",null,{"inputs":[],"output":{"name":"i32"}}],[11,"fmt","nix","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"errno"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"errno"}],"output":{"name":"bool"}}],[17,"EWOULDBLOCK","nix::errno","",null,null],[17,"EDEADLOCK","","",null,null],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and more detailed information about the error can be found in `errno`",null,null],[10,"sentinel","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"last","nix","",0,{"inputs":[],"output":{"name":"self"}}],[11,"desc","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"from_i32","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"errno"}}],[11,"clear","","",0,null],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This should not be used when `-1` is not the errno sentinel value.",0,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[11,"description","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"features","","",null,null],[5,"socket_atomic_cloexec","nix::features","",null,{"inputs":[],"output":{"name":"bool"}}],[0,"fcntl","nix","",null,null],[3,"SpliceFFlags","nix::fcntl","",null,null],[3,"OFlag","","",null,null],[3,"FdFlag","","",null,null],[3,"SealFlag","","",null,null],[3,"AtFlags","","",null,null],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",3,null],[13,"F_DUPFD_CLOEXEC","","",3,null],[13,"F_GETFD","","",3,null],[13,"F_SETFD","","",3,null],[13,"F_GETFL","","",3,null],[13,"F_SETFL","","",3,null],[13,"F_SETLK","","",3,null],[13,"F_SETLKW","","",3,null],[13,"F_GETLK","","",3,null],[13,"F_OFD_SETLK","","",3,null],[13,"F_OFD_SETLKW","","",3,null],[13,"F_OFD_GETLK","","",3,null],[13,"F_ADD_SEALS","","",3,null],[13,"F_GET_SEALS","","",3,null],[13,"F_GETPIPE_SZ","","",3,null],[13,"F_SETPIPE_SZ","","",3,null],[4,"FlockArg","","",null,null],[13,"LockShared","","",4,null],[13,"LockExclusive","","",4,null],[13,"Unlock","","",4,null],[13,"LockSharedNonblock","","",4,null],[13,"LockExclusiveNonblock","","",4,null],[13,"UnlockNonblock","","",4,null],[5,"open","","",null,{"inputs":[{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"name":"result"}}],[5,"openat","","",null,{"inputs":[{"name":"rawfd"},{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"name":"result"}}],[5,"readlink","","",null,null],[5,"readlinkat","","",null,null],[5,"fcntl","","",null,{"inputs":[{"name":"rawfd"},{"name":"fcntlarg"}],"output":{"name":"result"}}],[5,"flock","","",null,{"inputs":[{"name":"rawfd"},{"name":"flockarg"}],"output":{"name":"result"}}],[5,"splice","","",null,{"inputs":[{"name":"rawfd"},{"name":"option"},{"name":"rawfd"},{"name":"option"},{"name":"usize"},{"name":"splicefflags"}],"output":{"name":"result"}}],[5,"tee","","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"usize"},{"name":"splicefflags"}],"output":{"name":"result"}}],[5,"vmsplice","","",null,null],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"splicefflags"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"ordering"}}],[11,"hash","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",5,{"inputs":[],"output":{"name":"splicefflags"}}],[11,"all","","Returns the set containing all flags.",5,{"inputs":[],"output":{"name":"splicefflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",5,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",5,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",5,{"inputs":[{"name":"c_uint"}],"output":{"name":"splicefflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",5,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"bitor_assign","","Adds the set of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":{"name":"splicefflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",5,{"inputs":[{"name":"self"},{"name":"splicefflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",5,{"inputs":[{"name":"self"}],"output":{"name":"splicefflags"}}],[11,"extend","","",5,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",5,{"inputs":[{"name":"t"}],"output":{"name":"splicefflags"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"oflag"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"cmp","","",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"ordering"}}],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"oflag"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"oflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",6,{"inputs":[{"name":"c_int"}],"output":{"name":"oflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",6,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",6,{"inputs":[{"name":"self"},{"name":"oflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"bitor_assign","","Adds the set of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":{"name":"oflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",6,{"inputs":[{"name":"self"},{"name":"oflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",6,{"inputs":[{"name":"self"}],"output":{"name":"oflag"}}],[11,"extend","","",6,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",6,{"inputs":[{"name":"t"}],"output":{"name":"oflag"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"cmp","","",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"ordering"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",7,{"inputs":[],"output":{"name":"fdflag"}}],[11,"all","","Returns the set containing all flags.",7,{"inputs":[],"output":{"name":"fdflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",7,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",7,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",7,{"inputs":[{"name":"c_int"}],"output":{"name":"fdflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",7,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",7,{"inputs":[{"name":"self"},{"name":"fdflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitor_assign","","Adds the set of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",7,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",7,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"extend","","",7,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",7,{"inputs":[{"name":"t"}],"output":{"name":"fdflag"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"sealflag"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"cmp","","",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"ordering"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",8,{"inputs":[],"output":{"name":"sealflag"}}],[11,"all","","Returns the set containing all flags.",8,{"inputs":[],"output":{"name":"sealflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",8,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",8,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",8,{"inputs":[{"name":"c_int"}],"output":{"name":"sealflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",8,{"inputs":[{"name":"self"},{"name":"sealflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"bitor_assign","","Adds the set of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":{"name":"sealflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",8,{"inputs":[{"name":"self"},{"name":"sealflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",8,{"inputs":[{"name":"self"}],"output":{"name":"sealflag"}}],[11,"extend","","",8,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",8,{"inputs":[{"name":"t"}],"output":{"name":"sealflag"}}],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_LARGEFILE","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_NOATIME","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_PATH","","",null,null],[17,"O_TMPFILE","","",null,null],[17,"O_NDELAY","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"F_SEAL_SEAL","","",null,null],[17,"F_SEAL_SHRINK","","",null,null],[17,"F_SEAL_GROW","","",null,null],[17,"F_SEAL_WRITE","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_NO_AUTOMOUNT","","",null,null],[17,"AT_EMPTY_PATH","","",null,null],[11,"eq","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"atflags"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"ordering"}}],[11,"hash","","",9,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",9,{"inputs":[],"output":{"name":"atflags"}}],[11,"all","","Returns the set containing all flags.",9,{"inputs":[],"output":{"name":"atflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",9,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",9,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",9,{"inputs":[{"name":"c_int"}],"output":{"name":"atflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",9,{"inputs":[{"name":"self"},{"name":"atflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"atflags"}}],[11,"bitor_assign","","Adds the set of flags.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"atflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"atflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":{"name":"atflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",9,{"inputs":[{"name":"self"},{"name":"atflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",9,{"inputs":[{"name":"self"}],"output":{"name":"atflags"}}],[11,"extend","","",9,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",9,{"inputs":[{"name":"t"}],"output":{"name":"atflags"}}],[0,"mount","nix","",null,null],[3,"MsFlags","nix::mount","",null,null],[3,"MntFlags","","",null,null],[5,"mount","","",null,{"inputs":[{"name":"option"},{"name":"p2"},{"name":"option"},{"name":"msflags"},{"name":"option"}],"output":{"name":"result"}}],[5,"umount","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"umount2","","",null,{"inputs":[{"name":"p"},{"name":"mntflags"}],"output":{"name":"result"}}],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_VERBOSE","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"MS_NOSEC","","",null,null],[17,"MS_BORN","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[11,"eq","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"cmp","","",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"ordering"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",10,{"inputs":[],"output":{"name":"msflags"}}],[11,"all","","Returns the set containing all flags.",10,{"inputs":[],"output":{"name":"msflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",10,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",10,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",10,{"inputs":[{"name":"c_ulong"}],"output":{"name":"msflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",10,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",10,{"inputs":[{"name":"self"},{"name":"msflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitor_assign","","Adds the set of flags.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",10,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",10,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"extend","","",10,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",10,{"inputs":[{"name":"t"}],"output":{"name":"msflags"}}],[11,"eq","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"self"}],"output":{"name":"mntflags"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"cmp","","",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"ordering"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",11,{"inputs":[],"output":{"name":"mntflags"}}],[11,"all","","Returns the set containing all flags.",11,{"inputs":[],"output":{"name":"mntflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",11,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",11,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",11,{"inputs":[{"name":"c_int"}],"output":{"name":"mntflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",11,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",11,{"inputs":[{"name":"self"},{"name":"mntflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"bitor_assign","","Adds the set of flags.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":{"name":"mntflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",11,{"inputs":[{"name":"self"},{"name":"mntflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",11,{"inputs":[{"name":"self"}],"output":{"name":"mntflags"}}],[11,"extend","","",11,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",11,{"inputs":[{"name":"t"}],"output":{"name":"mntflags"}}],[0,"mqueue","nix","Posix Message Queue functions",null,null],[3,"MQ_OFlag","nix::mqueue","",null,null],[3,"FdFlag","","",null,null],[3,"MqAttr","","",null,null],[5,"mq_open","","",null,{"inputs":[{"name":"cstring"},{"name":"mq_oflag"},{"name":"mode"},{"name":"option"}],"output":{"name":"result"}}],[5,"mq_unlink","","",null,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[5,"mq_close","","",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored Returns the old attributes It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use",null,{"inputs":[{"name":"mqd_t"},{"name":"mqattr"}],"output":{"name":"result"}}],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",null,{"inputs":[{"name":"mqd_t"}],"output":{"name":"result"}}],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"FD_CLOEXEC","","",null,null],[11,"eq","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"self"}],"output":{"name":"mq_oflag"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"cmp","","",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"ordering"}}],[11,"hash","","",12,null],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",12,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",12,{"inputs":[],"output":{"name":"mq_oflag"}}],[11,"all","","Returns the set containing all flags.",12,{"inputs":[],"output":{"name":"mq_oflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",12,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",12,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",12,{"inputs":[{"name":"c_int"}],"output":{"name":"mq_oflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",12,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"bitor_assign","","Adds the set of flags.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":{"name":"mq_oflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",12,{"inputs":[{"name":"self"},{"name":"mq_oflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",12,{"inputs":[{"name":"self"}],"output":{"name":"mq_oflag"}}],[11,"extend","","",12,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",12,{"inputs":[{"name":"t"}],"output":{"name":"mq_oflag"}}],[11,"eq","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"cmp","","",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"ordering"}}],[11,"hash","","",13,null],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",13,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",13,{"inputs":[],"output":{"name":"fdflag"}}],[11,"all","","Returns the set containing all flags.",13,{"inputs":[],"output":{"name":"fdflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",13,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",13,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",13,{"inputs":[{"name":"c_int"}],"output":{"name":"fdflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",13,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",13,{"inputs":[{"name":"self"},{"name":"fdflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitor_assign","","Adds the set of flags.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":{"name":"fdflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",13,{"inputs":[{"name":"self"},{"name":"fdflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",13,{"inputs":[{"name":"self"}],"output":{"name":"fdflag"}}],[11,"extend","","",13,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",13,{"inputs":[{"name":"t"}],"output":{"name":"fdflag"}}],[11,"clone","","",14,{"inputs":[{"name":"self"}],"output":{"name":"mqattr"}}],[11,"eq","","",14,{"inputs":[{"name":"self"},{"name":"mqattr"}],"output":{"name":"bool"}}],[11,"new","","",14,{"inputs":[{"name":"c_long"},{"name":"c_long"},{"name":"c_long"},{"name":"c_long"}],"output":{"name":"mqattr"}}],[11,"flags","","",14,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",null,null],[6,"SessionId","nix::pty","",null,null],[3,"Winsize","","",null,null],[12,"ws_row","","",15,null],[12,"ws_col","","",15,null],[12,"ws_xpixel","","",15,null],[12,"ws_ypixel","","",15,null],[3,"OpenptyResult","","Representation of a master/slave pty pair",null,null],[12,"master","","",16,null],[12,"slave","","",16,null],[3,"PtyMaster","","Representation of the Master device in a master/slave pty pair",null,null],[5,"grantpt","","Grant access to a slave pseudoterminal (see grantpt(3))",null,{"inputs":[{"name":"ptymaster"}],"output":{"name":"result"}}],[5,"posix_openpt","","Open a pseudoterminal device (see posix_openpt(3))",null,{"inputs":[{"name":"oflag"}],"output":{"name":"result"}}],[5,"ptsname","","Get the name of the slave pseudoterminal (see ptsname(3))",null,{"inputs":[{"name":"ptymaster"}],"output":{"name":"result"}}],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see ptsname(3))",null,{"inputs":[{"name":"ptymaster"}],"output":{"name":"result"}}],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair (see unlockpt(3))",null,{"inputs":[{"name":"ptymaster"}],"output":{"name":"result"}}],[5,"openpty","","Create a new pseudoterminal, returning the slave and master file descriptors in `OpenptyResult` (see openpty). ",null,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"result"}}],[11,"fmt","","",17,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_raw_fd","","",17,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"into_raw_fd","","",17,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"drop","","",17,{"inputs":[{"name":"self"}],"output":null}],[0,"poll","nix","",null,null],[3,"PollFd","nix::poll","",null,null],[3,"EventFlags","","",null,null],[5,"poll","","",null,null],[5,"ppoll","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[11,"clone","","",18,{"inputs":[{"name":"self"}],"output":{"name":"pollfd"}}],[11,"new","","",18,{"inputs":[{"name":"c_int"},{"name":"eventflags"}],"output":{"name":"pollfd"}}],[11,"revents","","",18,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"eventflags"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"ordering"}}],[11,"hash","","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[],"output":{"name":"eventflags"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[],"output":{"name":"eventflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"self"}],"output":{"name":"c_short"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"c_short"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",19,{"inputs":[{"name":"c_short"}],"output":{"name":"eventflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",19,{"inputs":[{"name":"self"},{"name":"eventflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"bitor_assign","","Adds the set of flags.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":{"name":"eventflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",19,{"inputs":[{"name":"self"},{"name":"eventflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",19,{"inputs":[{"name":"self"}],"output":{"name":"eventflags"}}],[11,"extend","","",19,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",19,{"inputs":[{"name":"t"}],"output":{"name":"eventflags"}}],[0,"net","nix","",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[5,"if_nametoindex","nix::net::if_","Resolve an interface into a interface number.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[0,"sched","nix","",null,null],[3,"CloneFlags","nix::sched","",null,null],[3,"CpuSet","","",null,null],[5,"sched_setaffinity","","",null,{"inputs":[{"name":"pid"},{"name":"cpuset"}],"output":{"name":"result"}}],[5,"clone","","",null,null],[5,"unshare","","",null,{"inputs":[{"name":"cloneflags"}],"output":{"name":"result"}}],[5,"setns","","",null,{"inputs":[{"name":"rawfd"},{"name":"cloneflags"}],"output":{"name":"result"}}],[6,"CloneCb","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"CLONE_NEWCGROUP","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[11,"eq","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"self"}],"output":{"name":"cloneflags"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"cmp","","",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"ordering"}}],[11,"hash","","",20,null],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",20,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",20,{"inputs":[],"output":{"name":"cloneflags"}}],[11,"all","","Returns the set containing all flags.",20,{"inputs":[],"output":{"name":"cloneflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",20,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",20,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",20,{"inputs":[{"name":"c_int"}],"output":{"name":"cloneflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",20,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"bitor_assign","","Adds the set of flags.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":{"name":"cloneflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",20,{"inputs":[{"name":"self"},{"name":"cloneflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",20,{"inputs":[{"name":"self"}],"output":{"name":"cloneflags"}}],[11,"extend","","",20,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",20,{"inputs":[{"name":"t"}],"output":{"name":"cloneflags"}}],[11,"clone","","",21,{"inputs":[{"name":"self"}],"output":{"name":"cpuset"}}],[11,"new","","",21,{"inputs":[],"output":{"name":"cpuset"}}],[11,"is_set","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"set","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[11,"unset","","",21,{"inputs":[{"name":"self"},{"name":"usize"}],"output":{"name":"result"}}],[0,"sys","nix","",null,null],[0,"aio","nix::sys","",null,null],[3,"AioCb","nix::sys::aio","The basic structure used by all aio functions.  Each `aiocb` represents one I/O request.",null,null],[4,"AioFsyncMode","","Mode for `AioCb::fsync`.  Controls whether only data or both data and metadata are synced.",null,null],[13,"O_SYNC","","do it like `fsync`",22,null],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",22,null],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions.",null,null],[13,"LIO_NOP","","",23,null],[13,"LIO_WRITE","","",23,null],[13,"LIO_READ","","",23,null],[4,"LioMode","","Mode for `lio_listio`.",null,null],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested operations have been completed",24,null],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",24,null],[4,"AioCancelStat","","Return values for `AioCb::cancel and aio_cancel_all`",null,null],[13,"AioCanceled","","All outstanding requests were canceled",25,null],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be checked with `AioCb::error`",25,null],[13,"AioAllDone","","All of the requests have already finished",25,null],[5,"aio_cancel_all","","Cancels outstanding AIO requests.  All requests for `fd` will be cancelled.",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"aio_suspend","","Suspends the calling process until at least one of the specified `AioCb`s has completed, a signal is delivered, or the timeout has passed.  If `timeout` is `None`, `aio_suspend` will block indefinitely.",null,null],[5,"lio_listio","","Submits multiple asynchronous I/O requests with a single system call.  The order in which the requests are carried out is not specified.",null,null],[11,"clone","","",22,{"inputs":[{"name":"self"}],"output":{"name":"aiofsyncmode"}}],[11,"fmt","","",22,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",22,{"inputs":[{"name":"self"},{"name":"aiofsyncmode"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"self"}],"output":{"name":"lioopcode"}}],[11,"fmt","","",23,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",23,{"inputs":[{"name":"self"},{"name":"lioopcode"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"self"}],"output":{"name":"liomode"}}],[11,"fmt","","",24,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",24,{"inputs":[{"name":"self"},{"name":"liomode"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"self"}],"output":{"name":"aiocancelstat"}}],[11,"fmt","","",25,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",25,{"inputs":[{"name":"self"},{"name":"aiocancelstat"}],"output":{"name":"bool"}}],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",26,{"inputs":[{"name":"rawfd"},{"name":"c_int"},{"name":"sigevnotify"}],"output":{"name":"aiocb"}}],[11,"from_mut_slice","","Constructs a new `AioCb`.",26,null],[11,"from_boxed_slice","","Constructs a new `AioCb`.",26,{"inputs":[{"name":"rawfd"},{"name":"off_t"},{"name":"rc"},{"name":"c_int"},{"name":"sigevnotify"},{"name":"lioopcode"}],"output":{"name":"aiocb"}}],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather than mutable slices.",26,null],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",26,{"inputs":[{"name":"self"},{"name":"sigevnotify"}],"output":null}],[11,"cancel","","Cancels an outstanding AIO request.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"error","","Retrieve error status of an asynchronous operation.  If the request has not yet completed, returns `EINPROGRESS`.  Otherwise, returns `Ok` or any other error.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fsync","","An asynchronous version of `fsync`.",26,{"inputs":[{"name":"self"},{"name":"aiofsyncmode"}],"output":{"name":"result"}}],[11,"read","","Asynchronously reads from a file descriptor into a buffer",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"aio_return","","Retrieve return status of an asynchronous operation.  Should only be called once for each `AioCb`, after `AioCb::error` indicates that it has completed.  The result is the same as for `read`, `write`, of `fsync`.",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"write","","Asynchronously writes from a buffer to a file descriptor",26,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"fmt","","",26,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","If the `AioCb` has no remaining state in the kernel, just drop it. Otherwise, collect its error and return values, so as not to leak resources.",26,{"inputs":[{"name":"self"}],"output":null}],[0,"epoll","nix::sys","",null,null],[3,"EpollFlags","nix::sys::epoll","",null,null],[3,"EpollCreateFlags","","",null,null],[3,"EpollEvent","","",null,null],[4,"EpollOp","","",null,null],[13,"EpollCtlAdd","","",27,null],[13,"EpollCtlDel","","",27,null],[13,"EpollCtlMod","","",27,null],[5,"epoll_create","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"epoll_create1","","",null,{"inputs":[{"name":"epollcreateflags"}],"output":{"name":"result"}}],[5,"epoll_ctl","","",null,{"inputs":[{"name":"rawfd"},{"name":"epollop"},{"name":"rawfd"},{"name":"t"}],"output":{"name":"result"}}],[5,"epoll_wait","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLEXCLUSIVE","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CLOEXEC","","",null,null],[11,"eq","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"self"}],"output":{"name":"epollflags"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"cmp","","",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"ordering"}}],[11,"hash","","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[],"output":{"name":"epollflags"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[],"output":{"name":"epollflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",28,{"inputs":[{"name":"c_int"}],"output":{"name":"epollflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",28,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",28,{"inputs":[{"name":"self"},{"name":"epollflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"bitor_assign","","Adds the set of flags.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":{"name":"epollflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",28,{"inputs":[{"name":"self"},{"name":"epollflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",28,{"inputs":[{"name":"self"}],"output":{"name":"epollflags"}}],[11,"extend","","",28,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",28,{"inputs":[{"name":"t"}],"output":{"name":"epollflags"}}],[11,"clone","","",27,{"inputs":[{"name":"self"}],"output":{"name":"epollop"}}],[11,"eq","","",27,{"inputs":[{"name":"self"},{"name":"epollop"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"self"}],"output":{"name":"epollcreateflags"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"cmp","","",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"ordering"}}],[11,"hash","","",29,null],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"epollcreateflags"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"epollcreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",29,{"inputs":[{"name":"c_int"}],"output":{"name":"epollcreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",29,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"bitor_assign","","Adds the set of flags.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":{"name":"epollcreateflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",29,{"inputs":[{"name":"self"},{"name":"epollcreateflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",29,{"inputs":[{"name":"self"}],"output":{"name":"epollcreateflags"}}],[11,"extend","","",29,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"epollcreateflags"}}],[11,"clone","","",30,{"inputs":[{"name":"self"}],"output":{"name":"epollevent"}}],[11,"new","","",30,{"inputs":[{"name":"epollflags"},{"name":"u64"}],"output":{"name":"self"}}],[11,"empty","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"events","","",30,{"inputs":[{"name":"self"}],"output":{"name":"epollflags"}}],[11,"data","","",30,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[0,"eventfd","nix::sys","",null,null],[3,"EfdFlags","nix::sys::eventfd","",null,null],[5,"eventfd","","",null,{"inputs":[{"name":"c_uint"},{"name":"efdflags"}],"output":{"name":"result"}}],[17,"EFD_CLOEXEC","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[11,"eq","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"self"}],"output":{"name":"efdflags"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"cmp","","",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"ordering"}}],[11,"hash","","",31,null],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",31,{"inputs":[],"output":{"name":"efdflags"}}],[11,"all","","Returns the set containing all flags.",31,{"inputs":[],"output":{"name":"efdflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",31,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",31,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",31,{"inputs":[{"name":"c_int"}],"output":{"name":"efdflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",31,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",31,{"inputs":[{"name":"self"},{"name":"efdflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"efdflags"}}],[11,"bitor_assign","","Adds the set of flags.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"efdflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"efdflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":{"name":"efdflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",31,{"inputs":[{"name":"self"},{"name":"efdflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",31,{"inputs":[{"name":"self"}],"output":{"name":"efdflags"}}],[11,"extend","","",31,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",31,{"inputs":[{"name":"t"}],"output":{"name":"efdflags"}}],[0,"memfd","nix::sys","",null,null],[3,"MemFdCreateFlag","nix::sys::memfd","",null,null],[5,"memfd_create","","",null,{"inputs":[{"name":"cstr"},{"name":"memfdcreateflag"}],"output":{"name":"result"}}],[17,"MFD_CLOEXEC","","",null,null],[17,"MFD_ALLOW_SEALING","","",null,null],[11,"eq","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"self"}],"output":{"name":"memfdcreateflag"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"cmp","","",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"ordering"}}],[11,"hash","","",32,null],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",32,{"inputs":[],"output":{"name":"memfdcreateflag"}}],[11,"all","","Returns the set containing all flags.",32,{"inputs":[],"output":{"name":"memfdcreateflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",32,{"inputs":[{"name":"self"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",32,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",32,{"inputs":[{"name":"c_uint"}],"output":{"name":"memfdcreateflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",32,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"bitor_assign","","Adds the set of flags.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":{"name":"memfdcreateflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",32,{"inputs":[{"name":"self"},{"name":"memfdcreateflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",32,{"inputs":[{"name":"self"}],"output":{"name":"memfdcreateflag"}}],[11,"extend","","",32,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",32,{"inputs":[{"name":"t"}],"output":{"name":"memfdcreateflag"}}],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",null,null],[0,"sendfile","","",null,null],[5,"sendfile","nix::sys::sendfile","",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"option"},{"name":"usize"}],"output":{"name":"result"}}],[0,"signal","nix::sys","",null,null],[3,"SignalIterator","nix::sys::signal","",null,null],[3,"SaFlags","","",null,null],[3,"SigSet","","",null,null],[3,"SigAction","","",null,null],[3,"SigEvent","","Used to request asynchronous notification of the completion of certain events, such as POSIX AIO and timers.",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",33,null],[13,"SIGINT","","",33,null],[13,"SIGQUIT","","",33,null],[13,"SIGILL","","",33,null],[13,"SIGTRAP","","",33,null],[13,"SIGABRT","","",33,null],[13,"SIGBUS","","",33,null],[13,"SIGFPE","","",33,null],[13,"SIGKILL","","",33,null],[13,"SIGUSR1","","",33,null],[13,"SIGSEGV","","",33,null],[13,"SIGUSR2","","",33,null],[13,"SIGPIPE","","",33,null],[13,"SIGALRM","","",33,null],[13,"SIGTERM","","",33,null],[13,"SIGSTKFLT","","",33,null],[13,"SIGCHLD","","",33,null],[13,"SIGCONT","","",33,null],[13,"SIGSTOP","","",33,null],[13,"SIGTSTP","","",33,null],[13,"SIGTTIN","","",33,null],[13,"SIGTTOU","","",33,null],[13,"SIGURG","","",33,null],[13,"SIGXCPU","","",33,null],[13,"SIGXFSZ","","",33,null],[13,"SIGVTALRM","","",33,null],[13,"SIGPROF","","",33,null],[13,"SIGWINCH","","",33,null],[13,"SIGIO","","",33,null],[13,"SIGPWR","","",33,null],[13,"SIGSYS","","",33,null],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",34,null],[13,"SIG_UNBLOCK","","",34,null],[13,"SIG_SETMASK","","",34,null],[4,"SigHandler","","",null,null],[13,"SigDfl","","",35,null],[13,"SigIgn","","",35,null],[13,"Handler","","",35,null],[13,"SigAction","","",35,null],[4,"SigevNotify","","Used to request asynchronous notification of certain events, for example, with POSIX AIO, POSIX message queues, and POSIX timers.",null,null],[13,"SigevNone","","No notification will be delivered",36,null],[13,"SigevSignal","","The signal given by `signal` will be delivered to the process.  The value in `si_value` will be present in the `si_value` field of the `siginfo_t` structure of the queued signal.",36,null],[12,"signal","nix::sys::signal::SigevNotify","",36,null],[12,"si_value","","",36,null],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID is given in `thread_id`.  The value stored in `si_value` will be present in the `si_value` of the `siginfo_t` structure of the queued signal.",36,null],[12,"signal","nix::sys::signal::SigevNotify","",36,null],[12,"thread_id","","",36,null],[12,"si_value","","",36,null],[5,"sigaction","nix::sys::signal","",null,{"inputs":[{"name":"signal"},{"name":"sigaction"}],"output":{"name":"result"}}],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the calling thread.",null,{"inputs":[{"name":"sigmaskhow"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[5,"kill","","",null,{"inputs":[{"name":"pid"},{"name":"t"}],"output":{"name":"result"}}],[5,"raise","","",null,{"inputs":[{"name":"signal"}],"output":{"name":"result"}}],[6,"type_of_thread_id","","",null,null],[17,"NSIG","","",null,null],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_SIGINFO","","",null,null],[11,"clone","","",33,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"fmt","","",33,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",33,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"name":"bool"}}],[11,"next","","",37,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"iterator","","",33,{"inputs":[],"output":{"name":"signaliterator"}}],[11,"from_c_int","","",33,{"inputs":[{"name":"c_int"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"self"}],"output":{"name":"saflags"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"option"}}],[11,"lt","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"le","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"gt","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"ge","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"cmp","","",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"ordering"}}],[11,"hash","","",38,null],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",38,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",38,{"inputs":[],"output":{"name":"saflags"}}],[11,"all","","Returns the set containing all flags.",38,{"inputs":[],"output":{"name":"saflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",38,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",38,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",38,{"inputs":[{"name":"c_int"}],"output":{"name":"saflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",38,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",38,{"inputs":[{"name":"self"},{"name":"saflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"bitor_assign","","Adds the set of flags.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":{"name":"saflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",38,{"inputs":[{"name":"self"},{"name":"saflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",38,{"inputs":[{"name":"self"}],"output":{"name":"saflags"}}],[11,"extend","","",38,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",38,{"inputs":[{"name":"t"}],"output":{"name":"saflags"}}],[11,"clone","","",34,{"inputs":[{"name":"self"}],"output":{"name":"sigmaskhow"}}],[11,"eq","","",34,{"inputs":[{"name":"self"},{"name":"sigmaskhow"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[11,"all","","",39,{"inputs":[],"output":{"name":"sigset"}}],[11,"empty","","",39,{"inputs":[],"output":{"name":"sigset"}}],[11,"add","","",39,{"inputs":[{"name":"self"},{"name":"signal"}],"output":null}],[11,"clear","","",39,{"inputs":[{"name":"self"}],"output":null}],[11,"remove","","",39,{"inputs":[{"name":"self"},{"name":"signal"}],"output":null}],[11,"contains","","",39,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"name":"bool"}}],[11,"extend","","",39,{"inputs":[{"name":"self"},{"name":"sigset"}],"output":null}],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the calling thread.",39,{"inputs":[],"output":{"name":"result"}}],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling thread.",39,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"thread_block","","Adds the set of signals to the signal mask for the calling thread.",39,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"thread_unblock","","Removes the set of signals from the signal mask for the calling thread.",39,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns the old mask.",39,{"inputs":[{"name":"self"},{"name":"sigmaskhow"}],"output":{"name":"result"}}],[11,"wait","","Suspends execution of the calling thread until one of the signals in the signal mask becomes pending, and returns the accepted signal.",39,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"as_ref","","",39,{"inputs":[{"name":"self"}],"output":{"name":"sigset_t"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"self"}],"output":{"name":"sighandler"}}],[11,"eq","","",35,{"inputs":[{"name":"self"},{"name":"sighandler"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"self"},{"name":"sighandler"}],"output":{"name":"bool"}}],[11,"new","","This function will set or unset the flag `SA_SIGINFO` depending on the type of the `handler` argument.",40,{"inputs":[{"name":"sighandler"},{"name":"saflags"},{"name":"sigset"}],"output":{"name":"sigaction"}}],[11,"flags","","",40,{"inputs":[{"name":"self"}],"output":{"name":"saflags"}}],[11,"mask","","",40,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[11,"handler","","",40,{"inputs":[{"name":"self"}],"output":{"name":"sighandler"}}],[11,"clone","","",36,{"inputs":[{"name":"self"}],"output":{"name":"sigevnotify"}}],[11,"fmt","","",36,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",36,{"inputs":[{"name":"self"},{"name":"sigevnotify"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"self"},{"name":"sigevnotify"}],"output":{"name":"bool"}}],[11,"new","","",41,{"inputs":[{"name":"sigevnotify"}],"output":{"name":"sigevent"}}],[11,"sigevent","","",41,{"inputs":[{"name":"self"}],"output":{"name":"sigevent"}}],[11,"fmt","","",41,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",41,{"inputs":[{"name":"sigevent"}],"output":{"name":"self"}}],[0,"signalfd","nix::sys","Interface for the `signalfd` syscall.",null,null],[3,"siginfo","nix::sys::signalfd","",null,null],[12,"ssi_signo","","",42,null],[12,"ssi_errno","","",42,null],[12,"ssi_code","","",42,null],[12,"ssi_pid","","",42,null],[12,"ssi_uid","","",42,null],[12,"ssi_fd","","",42,null],[12,"ssi_tid","","",42,null],[12,"ssi_band","","",42,null],[12,"ssi_overrun","","",42,null],[12,"ssi_trapno","","",42,null],[12,"ssi_status","","",42,null],[12,"ssi_int","","",42,null],[12,"ssi_ptr","","",42,null],[12,"ssi_utime","","",42,null],[12,"ssi_stime","","",42,null],[12,"ssi_addr","","",42,null],[3,"SfdFlags","","",null,null],[3,"SignalFd","","A helper struct for creating, reading and closing a `signalfd` instance.",null,null],[5,"signalfd","","Creates a new file descriptor for reading signals.",null,{"inputs":[{"name":"rawfd"},{"name":"sigset"},{"name":"sfdflags"}],"output":{"name":"result"}}],[17,"SFD_NONBLOCK","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"SIGNALFD_NEW","","",null,null],[17,"SIGNALFD_SIGINFO_SIZE","","",null,null],[11,"eq","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"self"}],"output":{"name":"sfdflags"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"cmp","","",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"ordering"}}],[11,"hash","","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",43,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",43,{"inputs":[],"output":{"name":"sfdflags"}}],[11,"all","","Returns the set containing all flags.",43,{"inputs":[],"output":{"name":"sfdflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",43,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",43,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",43,{"inputs":[{"name":"c_int"}],"output":{"name":"sfdflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",43,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"sfdflags"}}],[11,"bitor_assign","","Adds the set of flags.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"sfdflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"sfdflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":{"name":"sfdflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",43,{"inputs":[{"name":"self"},{"name":"sfdflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",43,{"inputs":[{"name":"self"}],"output":{"name":"sfdflags"}}],[11,"extend","","",43,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",43,{"inputs":[{"name":"t"}],"output":{"name":"sfdflags"}}],[11,"fmt","","",44,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",44,{"inputs":[{"name":"sigset"}],"output":{"name":"result"}}],[11,"with_flags","","",44,{"inputs":[{"name":"sigset"},{"name":"sfdflags"}],"output":{"name":"result"}}],[11,"set_mask","","",44,{"inputs":[{"name":"self"},{"name":"sigset"}],"output":{"name":"result"}}],[11,"read_signal","","",44,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"drop","","",44,{"inputs":[{"name":"self"}],"output":null}],[11,"as_raw_fd","","",44,{"inputs":[{"name":"self"}],"output":{"name":"rawfd"}}],[11,"next","","",44,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"in_addr","nix::sys::socket","",null,null],[12,"s_addr","","",45,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",46,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",47,null],[12,"sa_data","","",47,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",48,null],[12,"sin_port","","",48,null],[12,"sin_addr","","",48,null],[12,"sin_zero","","",48,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",49,null],[12,"sin6_port","","",49,null],[12,"sin6_flowinfo","","",49,null],[12,"sin6_addr","","",49,null],[12,"sin6_scope_id","","",49,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",50,null],[12,"sun_path","","",50,null],[6,"sa_family_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",51,null],[3,"UnixAddr","","A wrapper around `sockaddr_un`. We track the length of `sun_path` (excluding a terminating null), because it may not be null-terminated.  For example, unconnected and Linux abstract sockets are never null-terminated, and POSIX does not require that `sun_len` include the terminating null even for normal sockets.  Note that the actual sockaddr length is greater by `offset_of!(libc::sockaddr_un, sun_path)`",null,null],[12,"0","","",52,null],[12,"1","","",52,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",53,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",54,null],[3,"NetlinkAddr","","",null,null],[12,"0","","",55,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",56,null],[12,"imr_interface","","",56,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",57,null],[12,"ipv6mr_interface","","",57,null],[3,"MsgFlags","","",null,null],[3,"SockFlag","","",null,null],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to recvmsg. The size and alignment match that of a cmsghdr followed by a T, but the fields are not accessible, as the actual types will change on a call to recvmsg.",null,null],[3,"RecvMsg","","",null,null],[12,"bytes","","",58,null],[12,"address","","",58,null],[12,"flags","","",58,null],[3,"CmsgIterator","","",null,null],[3,"linger","","",null,null],[12,"l_onoff","","",59,null],[12,"l_linger","","",59,null],[3,"ucred","","",null,null],[4,"AddressFamily","","",null,null],[13,"Unix","","",60,null],[13,"Inet","","",60,null],[13,"Inet6","","",60,null],[13,"Netlink","","",60,null],[13,"Packet","","",60,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",61,null],[13,"Unix","","",61,null],[13,"Netlink","","",61,null],[4,"InetAddr","","",null,null],[13,"V4","","",62,null],[13,"V6","","",62,null],[4,"IpAddr","","",null,null],[13,"V4","","",63,null],[13,"V6","","",63,null],[4,"SockType","","",null,null],[13,"Stream","","",64,null],[13,"Datagram","","",64,null],[13,"SeqPacket","","",64,null],[13,"Raw","","",64,null],[13,"Rdm","","",64,null],[4,"ControlMessage","","A type-safe wrapper around a single control message. More types may be added to this enum; do not exhaustively pattern-match it. Further reading",null,null],[13,"ScmRights","","A message of type SCM_RIGHTS, containing an array of file descriptors passed between processes. See the description in the \"Ancillary messages\" section of the unix(7) man page.",65,null],[4,"SockLevel","","The protocol level at which to get / set socket options. Used as an argument to `getsockopt` and `setsockopt`.",null,null],[13,"Socket","","",66,null],[13,"Tcp","","",66,null],[13,"Ip","","",66,null],[13,"Ipv6","","",66,null],[13,"Udp","","",66,null],[13,"Netlink","","",66,null],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",67,null],[13,"Write","","Further  transmissions will be disallowed.",67,null],[13,"Both","","Further receptions and transmissions will be disallowed.",67,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly accompanied by ancillary data. Optionally direct the message at the given address, as with sendto.",null,null],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, and optionally receive ancillary data into the provided buffer. If no ancillary data is desired, use () as the type parameter.",null,null],[5,"socket","","Create an endpoint for communication",null,{"inputs":[{"name":"addressfamily"},{"name":"socktype"},{"name":"sockflag"},{"name":"c_int"}],"output":{"name":"result"}}],[5,"socketpair","","Create a pair of connected sockets",null,{"inputs":[{"name":"addressfamily"},{"name":"socktype"},{"name":"c_int"},{"name":"sockflag"}],"output":{"name":"result"}}],[5,"listen","","Listen for connections on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[5,"bind","","Bind a name to a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockaddr"}],"output":{"name":"result"}}],[5,"accept","","Accept a connection on a socket",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"accept4","","Accept a connection on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockflag"}],"output":{"name":"result"}}],[5,"connect","","Initiate a connection on a socket",null,{"inputs":[{"name":"rawfd"},{"name":"sockaddr"}],"output":{"name":"result"}}],[5,"recv","","Receive data from a connection-oriented socket. Returns the number of bytes read",null,null],[5,"recvfrom","","Receive data from a connectionless or connection-oriented socket. Returns the number of bytes read and the socket address of the sender.",null,null],[5,"sendto","","",null,null],[5,"send","","Send data to a connection-oriented socket. Returns the number of bytes read",null,null],[5,"getsockopt","","Get the current value for the requested socket option",null,{"inputs":[{"name":"rawfd"},{"name":"o"}],"output":{"name":"result"}}],[5,"setsockopt","","Sets the value for the requested socket option",null,null],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"sockaddr_storage_to_addr","","Return the appropriate SockAddr type from a `sockaddr_storage` of a certain size.  In C this would usually be done by casting.  The `len` argument should be the number of bytes in the sockaddr_storage that are actually allocated and valid.  It must be at least as large as all the useful parts of the structure.  Note that in the case of a `sockaddr_un`, `len` need not include the terminating null.",null,{"inputs":[{"name":"sockaddr_storage"},{"name":"usize"}],"output":{"name":"result"}}],[5,"shutdown","","Shut down part of a full-duplex connection.",null,{"inputs":[{"name":"rawfd"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"self"}],"output":{"name":"netlinkaddr"}}],[11,"eq","","",55,{"inputs":[{"name":"self"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",55,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"new","","",55,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"netlinkaddr"}}],[11,"pid","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"groups","","",55,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"fmt","","",55,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"self"}],"output":{"name":"addressfamily"}}],[11,"eq","","",60,{"inputs":[{"name":"self"},{"name":"addressfamily"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",60,null],[11,"from_std","","",62,{"inputs":[{"name":"socketaddr"}],"output":{"name":"inetaddr"}}],[11,"new","","",62,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"inetaddr"}}],[11,"ip","","Gets the IP address associated with this socket address.",62,{"inputs":[{"name":"self"}],"output":{"name":"ipaddr"}}],[11,"port","","Gets the port number associated with this socket address",62,{"inputs":[{"name":"self"}],"output":{"name":"u16"}}],[11,"to_std","","",62,{"inputs":[{"name":"self"}],"output":{"name":"socketaddr"}}],[11,"to_str","","",62,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"eq","","",62,{"inputs":[{"name":"self"},{"name":"inetaddr"}],"output":{"name":"bool"}}],[11,"hash","","",62,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",62,{"inputs":[{"name":"self"}],"output":{"name":"inetaddr"}}],[11,"fmt","","",62,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",63,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipaddr"}}],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",63,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",63,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",53,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"from_std","","",53,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"any","","",53,{"inputs":[],"output":{"name":"ipv4addr"}}],[11,"octets","","",53,null],[11,"to_std","","",53,{"inputs":[{"name":"self"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",53,{"inputs":[{"name":"self"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",53,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",53,{"inputs":[{"name":"self"}],"output":{"name":"ipv4addr"}}],[11,"fmt","","",53,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ipv6addr"}}],[11,"new","","",54,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"from_std","","",54,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Return the eight 16-bit segments that make up this address",54,null],[11,"to_std","","",54,{"inputs":[{"name":"self"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",54,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Create a new sockaddr_un representing a filesystem path.",52,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_abstract","","Create a new sockaddr_un representing an address in the \"abstract namespace\". This is a Linux-specific extension, primarily used to allow chrooted processes to communicate with specific daemons.",52,null],[11,"path","","If this address represents a filesystem path, return that path.",52,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"eq","","",52,{"inputs":[{"name":"self"},{"name":"unixaddr"}],"output":{"name":"bool"}}],[11,"hash","","",52,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",52,{"inputs":[{"name":"self"}],"output":{"name":"unixaddr"}}],[11,"fmt","","",52,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_inet","","",61,{"inputs":[{"name":"inetaddr"}],"output":{"name":"sockaddr"}}],[11,"new_unix","","",61,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"new_netlink","","",61,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"sockaddr"}}],[11,"family","","",61,{"inputs":[{"name":"self"}],"output":{"name":"addressfamily"}}],[11,"to_str","","",61,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"as_ffi_pair","","",61,null],[11,"eq","","",61,{"inputs":[{"name":"self"},{"name":"sockaddr"}],"output":{"name":"bool"}}],[11,"hash","","",61,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"clone","","",61,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"fmt","","",61,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"self"}],"output":{"name":"msgflags"}}],[11,"partial_cmp","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"option"}}],[11,"lt","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"le","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"gt","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"ge","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"cmp","","",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"ordering"}}],[11,"hash","","",68,null],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",68,{"inputs":[],"output":{"name":"msgflags"}}],[11,"all","","Returns the set containing all flags.",68,{"inputs":[],"output":{"name":"msgflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",68,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",68,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",68,{"inputs":[{"name":"c_int"}],"output":{"name":"msgflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",68,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",68,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",68,{"inputs":[{"name":"self"},{"name":"msgflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"bitor_assign","","Adds the set of flags.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":{"name":"msgflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",68,{"inputs":[{"name":"self"},{"name":"msgflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",68,{"inputs":[{"name":"self"}],"output":{"name":"msgflags"}}],[11,"extend","","",68,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",68,{"inputs":[{"name":"t"}],"output":{"name":"msgflags"}}],[11,"clone","","",56,{"inputs":[{"name":"self"}],"output":{"name":"ip_mreq"}}],[11,"fmt","","",56,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",56,{"inputs":[{"name":"ipv4addr"},{"name":"option"}],"output":{"name":"ip_mreq"}}],[11,"new","","",57,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6_mreq"}}],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"PeerCredentials","","",null,null],[3,"TcpKeepIdle","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"RcvBufForce","","",null,null],[3,"SndBufForce","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"OriginalDst","","",null,null],[11,"clone","","",69,{"inputs":[{"name":"self"}],"output":{"name":"reuseaddr"}}],[11,"fmt","","",69,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",69,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",69,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"self"}],"output":{"name":"reuseport"}}],[11,"fmt","","",70,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",70,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",70,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"self"}],"output":{"name":"tcpnodelay"}}],[11,"fmt","","",71,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",71,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",71,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"fmt","","",72,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",72,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"linger"}],"output":{"name":"result"}}],[11,"get","","",72,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"self"}],"output":{"name":"ipaddmembership"}}],[11,"fmt","","",73,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",73,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ip_mreq"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"self"}],"output":{"name":"ipdropmembership"}}],[11,"fmt","","",74,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",74,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ip_mreq"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"self"}],"output":{"name":"ipv6addmembership"}}],[11,"fmt","","",75,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",75,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ipv6_mreq"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"self"}],"output":{"name":"ipv6dropmembership"}}],[11,"fmt","","",76,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",76,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"ipv6_mreq"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"self"}],"output":{"name":"ipmulticastttl"}}],[11,"fmt","","",77,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",77,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u8"}],"output":{"name":"result"}}],[11,"get","","",77,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"self"}],"output":{"name":"ipmulticastloop"}}],[11,"fmt","","",78,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",78,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",78,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"self"}],"output":{"name":"receivetimeout"}}],[11,"fmt","","",79,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",79,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"timeval"}],"output":{"name":"result"}}],[11,"get","","",79,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"self"}],"output":{"name":"sendtimeout"}}],[11,"fmt","","",80,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",80,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"timeval"}],"output":{"name":"result"}}],[11,"get","","",80,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"self"}],"output":{"name":"broadcast"}}],[11,"fmt","","",81,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",81,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",81,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"self"}],"output":{"name":"oobinline"}}],[11,"fmt","","",82,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",82,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",82,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"self"}],"output":{"name":"socketerror"}}],[11,"fmt","","",83,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",83,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"self"}],"output":{"name":"keepalive"}}],[11,"fmt","","",84,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",84,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get","","",84,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"self"}],"output":{"name":"peercredentials"}}],[11,"fmt","","",85,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",85,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"self"}],"output":{"name":"tcpkeepidle"}}],[11,"fmt","","",86,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",86,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get","","",86,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"self"}],"output":{"name":"rcvbuf"}}],[11,"fmt","","",87,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",87,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get","","",87,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"self"}],"output":{"name":"sndbuf"}}],[11,"fmt","","",88,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",88,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"get","","",88,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"self"}],"output":{"name":"rcvbufforce"}}],[11,"fmt","","",89,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",89,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"self"}],"output":{"name":"sndbufforce"}}],[11,"fmt","","",90,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"set","","",90,{"inputs":[{"name":"self"},{"name":"rawfd"},{"name":"usize"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"self"}],"output":{"name":"socktype"}}],[11,"fmt","","",91,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",91,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"self"}],"output":{"name":"acceptconn"}}],[11,"fmt","","",92,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",92,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"self"}],"output":{"name":"originaldst"}}],[11,"fmt","","",93,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","",93,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"result"}}],[6,"IpMulticastTtl","nix::sys::socket","",null,null],[6,"InAddrT","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"AF_PACKET","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOL_IP","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SOL_TCP","","",null,null],[17,"SOL_UDP","","",null,null],[17,"SOL_IPV6","","",null,null],[17,"SOL_NETLINK","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_BINDTODEVICE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_BSDCOMPAT","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_DOMAIN","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_MARK","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_PASSCRED","","",null,null],[17,"SO_PEEK_OFF","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_PRIORITY","","",null,null],[17,"SO_PROTOCOL","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_RCVBUFFORCE","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_RXQ_OVFL","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_SNDBUFFORCE","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_BUSY_POLL","","",null,null],[17,"SO_ORIGINAL_DST","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_ERRQUEUE","","",null,null],[17,"MSG_CMSG_CLOEXEC","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[8,"GetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `getsockopt`",null,null],[16,"Val","","",94,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `setsockopt`",null,null],[16,"Val","","",95,null],[11,"clone","","",64,{"inputs":[{"name":"self"}],"output":{"name":"socktype"}}],[11,"eq","","",64,{"inputs":[{"name":"self"},{"name":"socktype"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"self"}],"output":{"name":"sockflag"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"cmp","","",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"ordering"}}],[11,"hash","","",96,null],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",96,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",96,{"inputs":[],"output":{"name":"sockflag"}}],[11,"all","","Returns the set containing all flags.",96,{"inputs":[],"output":{"name":"sockflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",96,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",96,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",96,{"inputs":[{"name":"c_int"}],"output":{"name":"sockflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",96,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",96,{"inputs":[{"name":"self"},{"name":"sockflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"bitor_assign","","Adds the set of flags.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":{"name":"sockflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",96,{"inputs":[{"name":"self"},{"name":"sockflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",96,{"inputs":[{"name":"self"}],"output":{"name":"sockflag"}}],[11,"extend","","",96,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",96,{"inputs":[{"name":"t"}],"output":{"name":"sockflag"}}],[11,"new","","Create a CmsgSpace. The structure is used only for space, so the fields are uninitialized.",97,{"inputs":[],"output":{"name":"self"}}],[11,"cmsgs","","Iterate over the valid control messages pointed to by this msghdr.",58,{"inputs":[{"name":"self"}],"output":{"name":"cmsgiterator"}}],[11,"next","","",98,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"clone","","",59,{"inputs":[{"name":"self"}],"output":{"name":"linger"}}],[11,"fmt","","",59,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"self"}],"output":{"name":"ucred"}}],[11,"eq","","",99,{"inputs":[{"name":"self"},{"name":"ucred"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"self"},{"name":"ucred"}],"output":{"name":"bool"}}],[11,"fmt","","",99,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"self"}],"output":{"name":"shutdown"}}],[11,"eq","","",67,{"inputs":[{"name":"self"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",100,null],[12,"st_ino","","",100,null],[12,"st_nlink","","",100,null],[12,"st_mode","","",100,null],[12,"st_uid","","",100,null],[12,"st_gid","","",100,null],[12,"st_rdev","","",100,null],[12,"st_size","","",100,null],[12,"st_blksize","","",100,null],[12,"st_blocks","","",100,null],[12,"st_atime","","",100,null],[12,"st_atime_nsec","","",100,null],[12,"st_mtime","","",100,null],[12,"st_mtime_nsec","","",100,null],[12,"st_ctime","","",100,null],[12,"st_ctime_nsec","","",100,null],[3,"SFlag","","",null,null],[3,"Mode","","",null,null],[5,"mknod","","",null,{"inputs":[{"name":"p"},{"name":"sflag"},{"name":"mode"},{"name":"dev_t"}],"output":{"name":"result"}}],[5,"major","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"u64"}}],[5,"minor","","",null,{"inputs":[{"name":"dev_t"}],"output":{"name":"u64"}}],[5,"makedev","","",null,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"dev_t"}}],[5,"umask","","",null,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[5,"stat","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"lstat","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fstat","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"fstatat","","",null,{"inputs":[{"name":"rawfd"},{"name":"p"},{"name":"atflags"}],"output":{"name":"result"}}],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IROTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[11,"eq","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"self"}],"output":{"name":"sflag"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"cmp","","",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"ordering"}}],[11,"hash","","",101,null],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",101,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"sflag"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"sflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"mode_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"mode_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",101,{"inputs":[{"name":"mode_t"}],"output":{"name":"sflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",101,{"inputs":[{"name":"self"},{"name":"sflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"bitor_assign","","Adds the set of flags.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":{"name":"sflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",101,{"inputs":[{"name":"self"},{"name":"sflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"self"}],"output":{"name":"sflag"}}],[11,"extend","","",101,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"sflag"}}],[11,"eq","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"cmp","","",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"ordering"}}],[11,"hash","","",102,null],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",102,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",102,{"inputs":[],"output":{"name":"mode"}}],[11,"all","","Returns the set containing all flags.",102,{"inputs":[],"output":{"name":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"mode_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",102,{"inputs":[{"name":"mode_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",102,{"inputs":[{"name":"mode_t"}],"output":{"name":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",102,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",102,{"inputs":[{"name":"self"},{"name":"mode"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":{"name":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",102,{"inputs":[{"name":"self"},{"name":"mode"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",102,{"inputs":[{"name":"self"}],"output":{"name":"mode"}}],[11,"extend","","",102,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",102,{"inputs":[{"name":"t"}],"output":{"name":"mode"}}],[0,"syscall","nix::sys","Indirect system call",null,null],[5,"syscall","nix::sys::syscall","",null,null],[6,"Syscall","","",null,null],[7,"SYSPIVOTROOT","","",null,null],[7,"MEMFD_CREATE","","",null,null],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",null,null],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",null,null],[13,"RB_HALT_SYSTEM","","",103,null],[13,"RB_KEXEC","","",103,null],[13,"RB_POWER_OFF","","",103,null],[13,"RB_AUTOBOOT","","",103,null],[13,"RB_SW_SUSPEND","","",103,null],[5,"reboot","","",null,{"inputs":[{"name":"rebootmode"}],"output":{"name":"result"}}],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",null,{"inputs":[{"name":"bool"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"self"}],"output":{"name":"rebootmode"}}],[11,"fmt","","",103,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",103,{"inputs":[{"name":"self"},{"name":"rebootmode"}],"output":{"name":"bool"}}],[0,"termios","nix::sys","An interface for controlling asynchronous communication ports",null,null],[17,"NCCS","nix::sys::termios","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[3,"Termios","","Stores settings for the termios API",null,null],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",104,null],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",104,null],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",104,null],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",104,null],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",104,null],[3,"InputFlags","","Flags for configuring the input mode of a terminal",null,null],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",null,null],[3,"ControlFlags","","Flags for setting the control mode of a terminal",null,null],[3,"LocalFlags","","Flags for setting any local modes",null,null],[4,"BaudRate","","Baud rates supported by the system",null,null],[13,"B0","","",105,null],[13,"B50","","",105,null],[13,"B75","","",105,null],[13,"B110","","",105,null],[13,"B134","","",105,null],[13,"B150","","",105,null],[13,"B200","","",105,null],[13,"B300","","",105,null],[13,"B600","","",105,null],[13,"B1200","","",105,null],[13,"B1800","","",105,null],[13,"B2400","","",105,null],[13,"B4800","","",105,null],[13,"B9600","","",105,null],[13,"B19200","","",105,null],[13,"B38400","","",105,null],[13,"B57600","","",105,null],[13,"B115200","","",105,null],[13,"B230400","","",105,null],[13,"B460800","","",105,null],[13,"B500000","","",105,null],[13,"B576000","","",105,null],[13,"B921600","","",105,null],[13,"B1000000","","",105,null],[13,"B1152000","","",105,null],[13,"B1500000","","",105,null],[13,"B2000000","","",105,null],[13,"B2500000","","",105,null],[13,"B3000000","","",105,null],[13,"B3500000","","",105,null],[13,"B4000000","","",105,null],[4,"SetArg","","Specify when a port configuration change should occur.",null,null],[13,"TCSANOW","","The change will occur immediately",106,null],[13,"TCSADRAIN","","The change occurs after all output has been written",106,null],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",106,null],[4,"FlushArg","","Specify a combination of the input and output buffers to flush",null,null],[13,"TCIFLUSH","","Flush data that was received but not read",107,null],[13,"TCOFLUSH","","Flush data written but not transmitted",107,null],[13,"TCIOFLUSH","","Flush both received data not read and written data not transmitted",107,null],[4,"FlowArg","","Specify how transmission flow should be altered",null,null],[13,"TCOOFF","","Suspend transmission",108,null],[13,"TCOON","","Resume transmission",108,null],[13,"TCIOFF","","Transmit a STOP character, which should disable a connected terminal device",108,null],[13,"TCION","","Transmit a START character, which should re-enable a connected terminal device",108,null],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special characters.",null,null],[13,"VDISCARD","","",109,null],[13,"VEOF","","",109,null],[13,"VEOL","","",109,null],[13,"VEOL2","","",109,null],[13,"VERASE","","",109,null],[13,"VINTR","","",109,null],[13,"VKILL","","",109,null],[13,"VLNEXT","","",109,null],[13,"VMIN","","",109,null],[13,"VQUIT","","",109,null],[13,"VREPRINT","","",109,null],[13,"VSTART","","",109,null],[13,"VSTOP","","",109,null],[13,"VSUSP","","",109,null],[13,"VSWTC","","",109,null],[13,"VTIME","","",109,null],[13,"VWERASE","","",109,null],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",null,{"inputs":[{"name":"termios"}],"output":{"name":"baudrate"}}],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",null,{"inputs":[{"name":"termios"}],"output":{"name":"baudrate"}}],[5,"cfmakeraw","","Configures the port to something like the \"raw\" mode of the old Version 7 terminal driver (see termios(3)).",null,{"inputs":[{"name":"termios"}],"output":null}],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",null,{"inputs":[{"name":"termios"},{"name":"baudrate"}],"output":{"name":"result"}}],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",null,{"inputs":[{"name":"termios"},{"name":"baudrate"}],"output":{"name":"result"}}],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",null,{"inputs":[{"name":"termios"},{"name":"baudrate"}],"output":{"name":"result"}}],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",null,{"inputs":[{"name":"rawfd"},{"name":"setarg"},{"name":"termios"}],"output":{"name":"result"}}],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"tcflow","","Suspend or resume the transmission or reception of data (see tcflow(3p)).",null,{"inputs":[{"name":"rawfd"},{"name":"flowarg"}],"output":{"name":"result"}}],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",null,{"inputs":[{"name":"rawfd"},{"name":"flusharg"}],"output":{"name":"result"}}],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",null,{"inputs":[{"name":"rawfd"},{"name":"c_int"}],"output":{"name":"result"}}],[5,"tcgetsid","","Get the session controlled by the given terminal (see tcgetsid(3)).",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"IUTF8","","",null,null],[17,"OPOST","","",null,null],[17,"OLCUC","","",null,null],[17,"ONLCR","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"XTABS","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"NLDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"CBAUD","","",null,null],[17,"CMSPAR","","",null,null],[17,"CIBAUD","","",null,null],[17,"CBAUDEX","","",null,null],[17,"CSIZE","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[11,"clone","","",104,{"inputs":[{"name":"self"}],"output":{"name":"termios"}}],[11,"from","","",104,{"inputs":[{"name":"termios"}],"output":{"name":"self"}}],[11,"clone","","",105,{"inputs":[{"name":"self"}],"output":{"name":"baudrate"}}],[11,"fmt","","",105,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",105,{"inputs":[{"name":"self"},{"name":"baudrate"}],"output":{"name":"bool"}}],[11,"from","","",105,{"inputs":[{"name":"speed_t"}],"output":{"name":"baudrate"}}],[11,"clone","","",106,{"inputs":[{"name":"self"}],"output":{"name":"setarg"}}],[11,"fmt","","",106,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",106,{"inputs":[{"name":"self"},{"name":"setarg"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"self"}],"output":{"name":"flusharg"}}],[11,"fmt","","",107,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",107,{"inputs":[{"name":"self"},{"name":"flusharg"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"self"}],"output":{"name":"flowarg"}}],[11,"fmt","","",108,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",108,{"inputs":[{"name":"self"},{"name":"flowarg"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"self"}],"output":{"name":"specialcharacterindices"}}],[11,"fmt","","",109,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",109,{"inputs":[{"name":"self"},{"name":"specialcharacterindices"}],"output":{"name":"bool"}}],[11,"eq","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"self"}],"output":{"name":"inputflags"}}],[11,"partial_cmp","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"option"}}],[11,"lt","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"le","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"gt","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"ge","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"cmp","","",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"ordering"}}],[11,"hash","","",110,null],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",110,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",110,{"inputs":[],"output":{"name":"inputflags"}}],[11,"all","","Returns the set containing all flags.",110,{"inputs":[],"output":{"name":"inputflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",110,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",110,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",110,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"inputflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",110,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",110,{"inputs":[{"name":"self"},{"name":"inputflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"bitor_assign","","Adds the set of flags.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":{"name":"inputflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",110,{"inputs":[{"name":"self"},{"name":"inputflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",110,{"inputs":[{"name":"self"}],"output":{"name":"inputflags"}}],[11,"extend","","",110,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",110,{"inputs":[{"name":"t"}],"output":{"name":"inputflags"}}],[11,"eq","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"self"}],"output":{"name":"outputflags"}}],[11,"partial_cmp","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"option"}}],[11,"lt","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"le","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"gt","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"ge","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"cmp","","",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"ordering"}}],[11,"hash","","",111,null],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",111,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",111,{"inputs":[],"output":{"name":"outputflags"}}],[11,"all","","Returns the set containing all flags.",111,{"inputs":[],"output":{"name":"outputflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",111,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",111,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",111,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"outputflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",111,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",111,{"inputs":[{"name":"self"},{"name":"outputflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"bitor_assign","","Adds the set of flags.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":{"name":"outputflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",111,{"inputs":[{"name":"self"},{"name":"outputflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",111,{"inputs":[{"name":"self"}],"output":{"name":"outputflags"}}],[11,"extend","","",111,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",111,{"inputs":[{"name":"t"}],"output":{"name":"outputflags"}}],[11,"eq","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"self"}],"output":{"name":"controlflags"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"cmp","","",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"ordering"}}],[11,"hash","","",112,null],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",112,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",112,{"inputs":[],"output":{"name":"controlflags"}}],[11,"all","","Returns the set containing all flags.",112,{"inputs":[],"output":{"name":"controlflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",112,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",112,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",112,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"controlflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",112,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",112,{"inputs":[{"name":"self"},{"name":"controlflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"bitor_assign","","Adds the set of flags.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":{"name":"controlflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",112,{"inputs":[{"name":"self"},{"name":"controlflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",112,{"inputs":[{"name":"self"}],"output":{"name":"controlflags"}}],[11,"extend","","",112,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",112,{"inputs":[{"name":"t"}],"output":{"name":"controlflags"}}],[11,"eq","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"self"}],"output":{"name":"localflags"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"option"}}],[11,"lt","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"le","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"gt","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"ge","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"cmp","","",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"ordering"}}],[11,"hash","","",113,null],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",113,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",113,{"inputs":[],"output":{"name":"localflags"}}],[11,"all","","Returns the set containing all flags.",113,{"inputs":[],"output":{"name":"localflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",113,{"inputs":[{"name":"self"}],"output":{"name":"tcflag_t"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",113,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",113,{"inputs":[{"name":"tcflag_t"}],"output":{"name":"localflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",113,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",113,{"inputs":[{"name":"self"},{"name":"localflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"bitor_assign","","Adds the set of flags.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":{"name":"localflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",113,{"inputs":[{"name":"self"},{"name":"localflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",113,{"inputs":[{"name":"self"}],"output":{"name":"localflags"}}],[11,"extend","","",113,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",113,{"inputs":[{"name":"t"}],"output":{"name":"localflags"}}],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[5,"uname","","",null,{"inputs":[],"output":{"name":"utsname"}}],[11,"clone","","",114,{"inputs":[{"name":"self"}],"output":{"name":"utsname"}}],[11,"sysname","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"nodename","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"release","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"version","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"machine","","",114,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",null,null],[13,"Exited","","The process exited normally (as with `exit()` or returning from `main`) with the given exit code. This case matches the C macro `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.",115,null],[13,"Signaled","","The process was killed by the given signal. The third field indicates whether the signal generated a core dump. This case matches the C macro `WIFSIGNALED(status)`; the last two fields correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.",115,null],[13,"Stopped","","The process is alive, but was stopped by the given signal. This is only reported if `WaitPidFlag::WUNTRACED` was passed. This case matches the C macro `WIFSTOPPED(status)`; the second field is `WSTOPSIG(status)`.",115,null],[13,"PtraceEvent","","The traced process was stopped by a `PTRACE_EVENT_*` event. See [`nix::sys::ptrace`] and [`ptrace`(2)] for more information. All currently-defined events use `SIGTRAP` as the signal; the third field is the `PTRACE_EVENT_*` value of the event.",115,null],[13,"PtraceSyscall","","The traced process was stopped by execution of a system call, and `PTRACE_O_TRACESYSGOOD` is in effect. See [`ptrace`(2)] for more information.",115,null],[13,"Continued","","The process was previously stopped but has resumed execution after receiving a `SIGCONT` signal. This is only reported if `WaitPidFlag::WCONTINUED` was passed. This case matches the C macro `WIFCONTINUED(status)`.",115,null],[13,"StillAlive","","There are currently no state changes to report in any awaited child process. This is only returned if `WaitPidFlag::WNOHANG` was used (otherwise `wait()` or `waitpid()` would block until there was something to report).",115,null],[5,"waitpid","","",null,{"inputs":[{"name":"p"},{"name":"option"}],"output":{"name":"result"}}],[5,"wait","","",null,{"inputs":[],"output":{"name":"result"}}],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"WEXITED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"__WNOTHREAD","","",null,null],[17,"__WALL","","",null,null],[17,"__WCLONE","","",null,null],[11,"eq","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"self"}],"output":{"name":"waitpidflag"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"cmp","","",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"ordering"}}],[11,"hash","","",116,null],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",116,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",116,{"inputs":[],"output":{"name":"waitpidflag"}}],[11,"all","","Returns the set containing all flags.",116,{"inputs":[],"output":{"name":"waitpidflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",116,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",116,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",116,{"inputs":[{"name":"c_int"}],"output":{"name":"waitpidflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",116,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"bitor_assign","","Adds the set of flags.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"bitxor_assign","","Toggles the set of flags.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":{"name":"waitpidflag"}}],[11,"sub_assign","","Disables all flags enabled in the set.",116,{"inputs":[{"name":"self"},{"name":"waitpidflag"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",116,{"inputs":[{"name":"self"}],"output":{"name":"waitpidflag"}}],[11,"extend","","",116,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",116,{"inputs":[{"name":"t"}],"output":{"name":"waitpidflag"}}],[11,"eq","","",115,{"inputs":[{"name":"self"},{"name":"waitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"self"},{"name":"waitstatus"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"self"}],"output":{"name":"waitstatus"}}],[11,"fmt","","",115,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"mman","nix::sys","",null,null],[3,"MapFlags","nix::sys::mman","",null,null],[3,"MsFlags","","",null,null],[3,"ProtFlags","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically a higher-level abstraction will hide the unsafe interactions with the mmap'd region.",null,null],[5,"munmap","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"shm_open","","",null,{"inputs":[{"name":"p"},{"name":"oflag"},{"name":"mode"}],"output":{"name":"result"}}],[5,"shm_unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"eq","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"cmp","","",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"ordering"}}],[11,"hash","","",117,null],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",117,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",117,{"inputs":[],"output":{"name":"mapflags"}}],[11,"all","","Returns the set containing all flags.",117,{"inputs":[],"output":{"name":"mapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",117,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,{"inputs":[{"name":"c_int"}],"output":{"name":"mapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",117,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,{"inputs":[{"name":"self"},{"name":"mapflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitor_assign","","Adds the set of flags.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":{"name":"mapflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",117,{"inputs":[{"name":"self"},{"name":"mapflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",117,{"inputs":[{"name":"self"}],"output":{"name":"mapflags"}}],[11,"extend","","",117,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",117,{"inputs":[{"name":"t"}],"output":{"name":"mapflags"}}],[11,"eq","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"option"}}],[11,"lt","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"le","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"gt","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"ge","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"cmp","","",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"ordering"}}],[11,"hash","","",118,null],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",118,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",118,{"inputs":[],"output":{"name":"msflags"}}],[11,"all","","Returns the set containing all flags.",118,{"inputs":[],"output":{"name":"msflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",118,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",118,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",118,{"inputs":[{"name":"c_int"}],"output":{"name":"msflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",118,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",118,{"inputs":[{"name":"self"},{"name":"msflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitor_assign","","Adds the set of flags.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":{"name":"msflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",118,{"inputs":[{"name":"self"},{"name":"msflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",118,{"inputs":[{"name":"self"}],"output":{"name":"msflags"}}],[11,"extend","","",118,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",118,{"inputs":[{"name":"t"}],"output":{"name":"msflags"}}],[6,"MmapAdvise","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[11,"eq","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"self"}],"output":{"name":"protflags"}}],[11,"partial_cmp","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"option"}}],[11,"lt","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"le","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"gt","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"ge","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"cmp","","",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"ordering"}}],[11,"hash","","",119,null],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",119,{"inputs":[],"output":{"name":"protflags"}}],[11,"all","","Returns the set containing all flags.",119,{"inputs":[],"output":{"name":"protflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",119,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",119,{"inputs":[{"name":"c_int"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",119,{"inputs":[{"name":"c_int"}],"output":{"name":"protflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",119,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",119,{"inputs":[{"name":"self"},{"name":"protflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"bitor_assign","","Adds the set of flags.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":{"name":"protflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",119,{"inputs":[{"name":"self"},{"name":"protflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",119,{"inputs":[{"name":"self"}],"output":{"name":"protflags"}}],[11,"extend","","",119,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",119,{"inputs":[{"name":"t"}],"output":{"name":"protflags"}}],[0,"uio","nix::sys","",null,null],[3,"IoVec","nix::sys::uio","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"pwrite","","",null,null],[5,"pread","","",null,null],[11,"as_slice","","",120,null],[11,"from_slice","","",120,null],[11,"from_mut_slice","","",120,null],[0,"time","nix::sys","",null,null],[3,"TimeSpec","nix::sys::time","",null,null],[3,"TimeVal","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",121,{"inputs":[],"output":{"name":"self"}}],[11,"hours","","",121,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"minutes","","",121,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"seconds","","",121,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"milliseconds","","",121,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"microseconds","","",121,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[10,"nanoseconds","","",121,{"inputs":[{"name":"i64"}],"output":{"name":"self"}}],[11,"num_hours","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_minutes","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_seconds","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_milliseconds","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_microseconds","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[10,"num_nanoseconds","","",121,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"clone","","",122,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"as_ref","","",122,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",122,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"cmp","","",122,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"seconds","","",122,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"milliseconds","","",122,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",122,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",122,{"inputs":[{"name":"i64"}],"output":{"name":"timespec"}}],[11,"num_seconds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_nanoseconds","","",122,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"tv_sec","","",122,{"inputs":[{"name":"self"}],"output":{"name":"time_t"}}],[11,"tv_nsec","","",122,{"inputs":[{"name":"self"}],"output":{"name":"c_long"}}],[11,"neg","","",122,{"inputs":[{"name":"self"}],"output":{"name":"timespec"}}],[11,"add","","",122,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"sub","","",122,{"inputs":[{"name":"self"},{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"mul","","",122,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"div","","",122,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timespec"}}],[11,"fmt","","",122,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"as_ref","","",123,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",123,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"bool"}}],[11,"cmp","","",123,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"option"}}],[11,"seconds","","",123,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"milliseconds","","",123,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",123,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.  Some precision will be lost",123,{"inputs":[{"name":"i64"}],"output":{"name":"timeval"}}],[11,"num_seconds","","",123,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_milliseconds","","",123,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_microseconds","","",123,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"num_nanoseconds","","",123,{"inputs":[{"name":"self"}],"output":{"name":"i64"}}],[11,"tv_sec","","",123,{"inputs":[{"name":"self"}],"output":{"name":"time_t"}}],[11,"tv_usec","","",123,{"inputs":[{"name":"self"}],"output":{"name":"suseconds_t"}}],[11,"neg","","",123,{"inputs":[{"name":"self"}],"output":{"name":"timeval"}}],[11,"add","","",123,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"sub","","",123,{"inputs":[{"name":"self"},{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"mul","","",123,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timeval"}}],[11,"div","","",123,{"inputs":[{"name":"self"},{"name":"i32"}],"output":{"name":"timeval"}}],[11,"fmt","","",123,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"ptrace","nix::sys","",null,null],[5,"ptrace","nix::sys::ptrace","Performs a ptrace request. If the request in question is provided by a specialised function this function will return an unsupported operation error.",null,null],[5,"ptrace_setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",null,{"inputs":[{"name":"pid"},{"name":"ptraceoptions"}],"output":{"name":"result"}}],[5,"ptrace_getevent","","Gets a ptrace event as described by `ptrace(PTRACE_GETEVENTMSG,...)`",null,{"inputs":[{"name":"pid"}],"output":{"name":"result"}}],[5,"ptrace_getsiginfo","","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",null,{"inputs":[{"name":"pid"}],"output":{"name":"result"}}],[5,"ptrace_setsiginfo","","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",null,{"inputs":[{"name":"pid"},{"name":"siginfo_t"}],"output":{"name":"result"}}],[0,"ptrace","","",null,null],[6,"PtraceRequest","nix::sys::ptrace::ptrace","",null,null],[6,"PtraceEvent","","",null,null],[6,"PtraceOptions","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"PTRACE_EVENT_FORK","","",null,null],[17,"PTRACE_EVENT_VFORK","","",null,null],[17,"PTRACE_EVENT_CLONE","","",null,null],[17,"PTRACE_EVENT_EXEC","","",null,null],[17,"PTRACE_EVENT_VFORK_DONE","","",null,null],[17,"PTRACE_EVENT_EXIT","","",null,null],[17,"PTRACE_EVENT_SECCOMP","","",null,null],[17,"PTRACE_EVENT_STOP","","",null,null],[17,"PTRACE_O_TRACESYSGOOD","","",null,null],[17,"PTRACE_O_TRACEFORK","","",null,null],[17,"PTRACE_O_TRACEVFORK","","",null,null],[17,"PTRACE_O_TRACECLONE","","",null,null],[17,"PTRACE_O_TRACEEXEC","","",null,null],[17,"PTRACE_O_TRACEVFORKDONE","","",null,null],[17,"PTRACE_O_TRACEEXIT","","",null,null],[17,"PTRACE_O_TRACESECCOMP","","",null,null],[0,"select","nix::sys","",null,null],[3,"FdSet","nix::sys::select","",null,null],[5,"select","","",null,{"inputs":[{"name":"c_int"},{"name":"option"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[17,"FD_SETSIZE","","",null,null],[11,"clone","","",124,{"inputs":[{"name":"self"}],"output":{"name":"fdset"}}],[11,"new","","",124,{"inputs":[],"output":{"name":"fdset"}}],[11,"insert","","",124,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":null}],[11,"remove","","",124,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":null}],[11,"contains","","",124,{"inputs":[{"name":"self"},{"name":"rawfd"}],"output":{"name":"bool"}}],[11,"clear","","",124,{"inputs":[{"name":"self"}],"output":null}],[0,"quota","nix::sys","",null,null],[5,"quotactl_on","nix::sys::quota","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"quotafmt"},{"name":"p"}],"output":{"name":"result"}}],[5,"quotactl_off","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"}],"output":{"name":"result"}}],[5,"quotactl_sync","","",null,{"inputs":[{"name":"quotatype"},{"name":"option"}],"output":{"name":"result"}}],[5,"quotactl_get","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"c_int"},{"name":"dqblk"}],"output":{"name":"result"}}],[5,"quotactl_set","","",null,{"inputs":[{"name":"quotatype"},{"name":"p"},{"name":"c_int"},{"name":"dqblk"}],"output":{"name":"result"}}],[0,"quota","","",null,null],[3,"QuotaCmd","nix::sys::quota::quota","",null,null],[12,"0","","",125,null],[12,"1","","",125,null],[3,"QuotaValidFlags","","",null,null],[3,"Dqblk","","",null,null],[12,"bhardlimit","","",126,null],[12,"bsoftlimit","","",126,null],[12,"curspace","","",126,null],[12,"ihardlimit","","",126,null],[12,"isoftlimit","","",126,null],[12,"curinodes","","",126,null],[12,"btime","","",126,null],[12,"itime","","",126,null],[12,"valid","","",126,null],[6,"QuotaSubCmd","","",null,null],[6,"QuotaType","","",null,null],[6,"QuotaFmt","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[11,"as_int","","",125,{"inputs":[{"name":"self"}],"output":{"name":"c_int"}}],[11,"eq","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"self"}],"output":{"name":"quotavalidflags"}}],[11,"partial_cmp","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"option"}}],[11,"lt","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"le","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"gt","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"ge","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"cmp","","",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"ordering"}}],[11,"hash","","",127,null],[11,"default","","",127,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",127,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",127,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"all","","Returns the set containing all flags.",127,{"inputs":[],"output":{"name":"quotavalidflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",127,{"inputs":[{"name":"self"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",127,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",127,{"inputs":[{"name":"u32"}],"output":{"name":"quotavalidflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",127,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"bitor_assign","","Adds the set of flags.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":{"name":"quotavalidflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",127,{"inputs":[{"name":"self"},{"name":"quotavalidflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",127,{"inputs":[{"name":"self"}],"output":{"name":"quotavalidflags"}}],[11,"extend","","",127,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",127,{"inputs":[{"name":"t"}],"output":{"name":"quotavalidflags"}}],[11,"default","","",126,{"inputs":[],"output":{"name":"dqblk"}}],[11,"fmt","","",126,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"self"}],"output":{"name":"dqblk"}}],[0,"statfs","nix::sys","",null,null],[5,"statfs","nix::sys::statfs","",null,{"inputs":[{"name":"p"},{"name":"statfs"}],"output":{"name":"result"}}],[5,"fstatfs","","",null,{"inputs":[{"name":"t"},{"name":"statfs"}],"output":{"name":"result"}}],[0,"statvfs","nix::sys","FFI for statvfs functions",null,null],[5,"statvfs","nix::sys::statvfs","Fill an existing `Statvfs` object with information about the `path`",null,{"inputs":[{"name":"p"},{"name":"statvfs"}],"output":{"name":"result"}}],[5,"fstatvfs","","Fill an existing `Statvfs` object with information about `fd`",null,{"inputs":[{"name":"t"},{"name":"statvfs"}],"output":{"name":"result"}}],[0,"vfs","","Structs related to the `statvfs` and `fstatvfs` functions",null,null],[3,"FsFlags","nix::sys::statvfs::vfs","Mount Flags",null,null],[3,"Statvfs","","The posix statvfs struct",null,null],[12,"f_bsize","","Filesystem block size. This is the value that will lead to most efficient use of the filesystem",128,null],[12,"f_frsize","","Fragment Size -- actual minimum unit of allocation on this filesystem",128,null],[12,"f_blocks","","Total number of blocks on the filesystem",128,null],[12,"f_bfree","","Number of unused blocks on the filesystem, including those reserved for root",128,null],[12,"f_bavail","","Number of blocks available to non-root users",128,null],[12,"f_files","","Total number of inodes available on the filesystem",128,null],[12,"f_ffree","","Number of inodes available on the filesystem",128,null],[12,"f_favail","","Number of inodes available to non-root users",128,null],[12,"f_fsid","","File System ID",128,null],[12,"f_flag","","Mount Flags",128,null],[12,"f_namemax","","Maximum filename length",128,null],[17,"RDONLY","","Read Only",null,null],[17,"NOSUID","","Do not allow the set-uid bits to have an effect",null,null],[17,"NODEV","","Do not interpret character or block-special devices",null,null],[17,"NOEXEC","","Do not allow execution of binaries on the filesystem",null,null],[17,"SYNCHRONOUS","","All IO should be done synchronously",null,null],[17,"MANDLOCK","","Allow mandatory locks on the filesystem",null,null],[17,"WRITE","","",null,null],[17,"APPEND","","",null,null],[17,"IMMUTABLE","","",null,null],[17,"NOATIME","","Do not update access times on files",null,null],[17,"NODIRATIME","","Do not update access times on files",null,null],[17,"RELATIME","","Update access time relative to modify/change time",null,null],[11,"eq","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"self"}],"output":{"name":"fsflags"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"cmp","","",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"ordering"}}],[11,"hash","","",129,null],[11,"default","","",129,{"inputs":[],"output":{"name":"fsflags"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",129,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",129,{"inputs":[],"output":{"name":"fsflags"}}],[11,"all","","Returns the set containing all flags.",129,{"inputs":[],"output":{"name":"fsflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",129,{"inputs":[{"name":"self"}],"output":{"name":"c_ulong"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",129,{"inputs":[{"name":"c_ulong"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",129,{"inputs":[{"name":"c_ulong"}],"output":{"name":"fsflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",129,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",129,{"inputs":[{"name":"self"},{"name":"fsflags"},{"name":"bool"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"bitor_assign","","Adds the set of flags.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"bitxor_assign","","Toggles the set of flags.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"bitand","","Returns the intersection between the two sets of flags.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"sub","","Returns the set difference of the two sets of flags.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":{"name":"fsflags"}}],[11,"sub_assign","","Disables all flags enabled in the set.",129,{"inputs":[{"name":"self"},{"name":"fsflags"}],"output":null}],[11,"not","","Returns the complement of this set of flags.",129,{"inputs":[{"name":"self"}],"output":{"name":"fsflags"}}],[11,"extend","","",129,{"inputs":[{"name":"self"},{"name":"t"}],"output":null}],[11,"from_iter","","",129,{"inputs":[{"name":"t"}],"output":{"name":"fsflags"}}],[11,"fmt","","",128,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"self"}],"output":{"name":"statvfs"}}],[11,"for_path","","Create a new `Statvfs` object and fill it with information about the mount that contains `path`",128,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"update_with_path","","Replace information in this struct with information about `path`",128,{"inputs":[{"name":"self"},{"name":"p"}],"output":{"name":"result"}}],[11,"for_fd","","Create a new `Statvfs` object and fill it with information from fd",128,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"update_with_fd","","Replace information in this struct with information about `fd`",128,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"result"}}],[11,"default","","Create a statvfs object initialized to all zeros",128,{"inputs":[],"output":{"name":"self"}}],[0,"pthread","nix::sys","",null,null],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see pthread_self(3)",null,{"inputs":[],"output":{"name":"pthread"}}],[6,"Pthread","","",null,null],[0,"ucontext","nix","",null,null],[3,"UContext","nix::ucontext","",null,null],[11,"clone","","",130,{"inputs":[{"name":"self"}],"output":{"name":"ucontext"}}],[11,"get","","",130,{"inputs":[],"output":{"name":"result"}}],[11,"set","","",130,{"inputs":[{"name":"self"}],"output":{"name":"result"}}],[11,"sigmask_mut","","",130,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[11,"sigmask","","",130,{"inputs":[{"name":"self"}],"output":{"name":"sigset"}}],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\" header",null,null],[3,"Uid","nix::unistd","User identifier",null,null],[3,"Gid","","Group identifier",null,null],[3,"Pid","","Process identifier",null,null],[4,"ForkResult","","Represents the successful result of calling `fork`",null,null],[13,"Parent","","",131,null],[12,"child","nix::unistd::ForkResult","",131,null],[13,"Child","nix::unistd","",131,null],[4,"Whence","","",null,null],[13,"SeekSet","","",132,null],[13,"SeekCur","","",132,null],[13,"SeekEnd","","",132,null],[13,"SeekData","","",132,null],[13,"SeekHole","","",132,null],[4,"PathconfVar","","Variable names for `pathconf`",null,null],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed integer value, the maximum size of a regular file allowed in the specified directory.",133,null],[13,"LINK_MAX","","Maximum number of links to a single file.",133,null],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",133,null],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a terminal input queue; therefore, the maximum number of bytes a conforming application may require to be typed as input before reading them.",133,null],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the terminating null of a filename string).",133,null],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a pathname in a user-supplied buffer of unspecified size, including the terminating null character. Minimum number the implementation will accept as the maximum number of bytes in a pathname.",133,null],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic when writing to a pipe.",133,null],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",133,null],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for any portion of a file.",133,null],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.",133,null],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",133,null],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",133,null],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",133,null],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",133,null],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process with appropriate privileges, and to changing the group ID of a file only to the effective group ID of the process or to one of its supplementary group IDs.",133,null],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an error.",133,null],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a character that shall disable terminal special character handling.",133,null],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed for the associated file.",133,null],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed for the associated file.",133,null],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed for the associated file.",133,null],[4,"SysconfVar","","Variable names for `sysconf`",null,null],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call supported by the implementation.",134,null],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations supported by the implementation.",134,null],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its asynchronous I/O priority level from its own scheduling priority.",134,null],[13,"ARG_MAX","","Maximum length of argument to the exec functions including environment data.",134,null],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with `atexit`.",134,null],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",134,null],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc utility.",134,null],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",134,null],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc utility.",134,null],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",134,null],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry of the LC_COLLATE order keyword in the locale definition file",134,null],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",134,null],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within parentheses by the expr utility.",134,null],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the terminating null) as returned from the `gethostname` function",134,null],[13,"IOV_MAX","","Maximum number of iovec structures that one process has available for use with `readv` or `writev`.",134,null],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a utility's input line (either standard input or another file), when the utility is described as processing text files. The length includes room for the trailing .",134,null],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",134,null],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per process.",134,null],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",134,null],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",134,null],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a process may hold.",134,null],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the implementation.",134,null],[13,"OPEN_MAX","","A value one greater than the maximum value that the system may assign to a newly-created file descriptor.",134,null],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option. ",134,null],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",134,null],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",134,null],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",134,null],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks option.",134,null],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option. ",134,null],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",134,null],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",134,null],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",134,null],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking option.",134,null],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",134,null],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",134,null],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",134,null],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",134,null],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and Output option.",134,null],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",134,null],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",134,null],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",134,null],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",134,null],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression Handling option.",134,null],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved set-group-ID.",134,null],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",134,null],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects option.",134,null],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",134,null],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",134,null],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",134,null],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server option.",134,null],[13,"_POSIX_SS_REPL_MAX","","",134,null],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and Output option.",134,null],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address Attribute option.",134,null],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size Attribute option.",134,null],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks option.",134,null],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority Inheritance option.",134,null],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority Protection option.",134,null],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution Scheduling option.",134,null],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared Synchronization option.",134,null],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority Inheritance option.",134,null],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority Protection option.",134,null],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",134,null],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server option.",134,null],[13,"_POSIX_THREADS","","The implementation supports threads.",134,null],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",134,null],[13,"_POSIX_TIMERS","","The implementation supports timers. ",134,null],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",134,null],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",134,null],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",134,null],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",134,null],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",134,null],[13,"_POSIX_TRACE_NAME_MAX","","",134,null],[13,"_POSIX_TRACE_SYS_MAX","","",134,null],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",134,null],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",134,null],[13,"_POSIX_VERSION","","Integer value indicating version of this standard (C-language binding) to which the implementation conforms. For implementations conforming to POSIX.1-2008, the value shall be 200809L.",134,null],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, `pointer`, and `off_t` types.",134,null],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, and pointer types and an `off_t` type using at least 64 bits.",134,null],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation environment with 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.",134,null],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation environment with an `int` type using at least 32 bits and `long`, pointer, and `off_t` types using at least 64 bits.",134,null],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",134,null],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development Utilities option.",134,null],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics option.",134,null],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development Utilities option.",134,null],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities option.",134,null],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the localedef utility.",134,null],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services and Utilities option.",134,null],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",134,null],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart option.",134,null],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request option.",134,null],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request option.",134,null],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request option.",134,null],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development Utilities option.",134,null],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities option.",134,null],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and Utilities volume of POSIX.1 to which the implementation conforms.",134,null],[13,"PAGE_SIZE","","The size of a system page in bytes.",134,null],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",134,null],[13,"PTHREAD_KEYS_MAX","","",134,null],[13,"PTHREAD_STACK_MIN","","",134,null],[13,"PTHREAD_THREADS_MAX","","",134,null],[13,"RE_DUP_MAX","","",134,null],[13,"RTSIG_MAX","","",134,null],[13,"SEM_NSEMS_MAX","","",134,null],[13,"SEM_VALUE_MAX","","",134,null],[13,"SIGQUEUE_MAX","","",134,null],[13,"STREAM_MAX","","",134,null],[13,"SYMLOOP_MAX","","",134,null],[13,"TIMER_MAX","","",134,null],[13,"TTY_NAME_MAX","","",134,null],[13,"TZNAME_MAX","","",134,null],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option Group.",134,null],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2 Enhanced Internationalization Option Group.",134,null],[13,"_XOPEN_LEGACY","","",134,null],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option Group.",134,null],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads Option Group.",134,null],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared Memory Option Group.",134,null],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",134,null],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",134,null],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability Guide to which the implementation conforms.",134,null],[5,"pivot_root","","",null,{"inputs":[{"name":"p1"},{"name":"p2"}],"output":{"name":"result"}}],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",null,{"inputs":[{"name":"uid"},{"name":"uid"},{"name":"uid"}],"output":{"name":"result"}}],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",null,{"inputs":[{"name":"gid"},{"name":"gid"},{"name":"gid"}],"output":{"name":"result"}}],[5,"fork","","Create a new child process duplicating the parent process (see fork(2)).",null,{"inputs":[],"output":{"name":"result"}}],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,{"inputs":[],"output":{"name":"pid"}}],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",null,{"inputs":[],"output":{"name":"pid"}}],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,{"inputs":[{"name":"pid"},{"name":"pid"}],"output":{"name":"result"}}],[5,"getpgid","","",null,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[5,"setsid","","Create new session and set process group id (see setsid(2)).",null,{"inputs":[],"output":{"name":"result"}}],[5,"tcgetpgrp","","Get the terminal foreground process group (see tcgetpgrp(3)).",null,{"inputs":[{"name":"c_int"}],"output":{"name":"result"}}],[5,"tcsetpgrp","","Set the terminal foreground process group (see tcgetpgrp(3)).",null,{"inputs":[{"name":"c_int"},{"name":"pid"}],"output":{"name":"result"}}],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,{"inputs":[],"output":{"name":"pid"}}],[5,"gettid","","Get the caller's thread ID (see gettid(2).",null,{"inputs":[],"output":{"name":"pid"}}],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"dup2","","Create a copy of the specified file descriptor using the specified fd (see dup(2)).",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"}],"output":{"name":"result"}}],[5,"dup3","","Create a new copy of the specified file descriptor using the specified fd and flags (see dup(2)).",null,{"inputs":[{"name":"rawfd"},{"name":"rawfd"},{"name":"oflag"}],"output":{"name":"result"}}],[5,"chdir","","Change the current working directory of the calling process (see chdir(2)).",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fchdir","","Change the current working directory of the process to the one given as an open file descriptor (see fchdir(2)).",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"mkdir","","Creates new directory `path` with access rights `mode`.",null,{"inputs":[{"name":"p"},{"name":"mode"}],"output":{"name":"result"}}],[5,"getcwd","","Returns the current directory as a PathBuf",null,{"inputs":[],"output":{"name":"result"}}],[5,"chown","","Change the ownership of the file at `path` to be owned by the specified `owner` (user) and `group` (see chown(2)).",null,{"inputs":[{"name":"p"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[5,"execv","","Replace the current process image with a new one (see exec(3)).",null,null],[5,"execve","","Replace the current process image with a new one (see execve(2)).",null,null],[5,"execvp","","Replace the current process image with a new one and replicate shell `PATH` searching behavior (see exec(3)).",null,null],[5,"daemon","","Daemonize this process by detaching from the controlling terminal (see daemon(3)).",null,{"inputs":[{"name":"bool"},{"name":"bool"}],"output":{"name":"result"}}],[5,"sethostname","","Set the system host name (see gethostname(2)).",null,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[5,"gethostname","","Get the host name and store it in the provided buffer, returning a pointer the CStr in that buffer on success (see gethostname(2)).",null,null],[5,"close","","Close a raw file descriptor",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"read","","",null,null],[5,"write","","",null,null],[5,"lseek","","",null,{"inputs":[{"name":"rawfd"},{"name":"off_t"},{"name":"whence"}],"output":{"name":"result"}}],[5,"lseek64","","",null,{"inputs":[{"name":"rawfd"},{"name":"off64_t"},{"name":"whence"}],"output":{"name":"result"}}],[5,"pipe","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"pipe2","","",null,{"inputs":[{"name":"oflag"}],"output":{"name":"result"}}],[5,"ftruncate","","",null,{"inputs":[{"name":"rawfd"},{"name":"off_t"}],"output":{"name":"result"}}],[5,"isatty","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"unlink","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"chroot","","",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fsync","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"fdatasync","","",null,{"inputs":[{"name":"rawfd"}],"output":{"name":"result"}}],[5,"getuid","","",null,{"inputs":[],"output":{"name":"uid"}}],[5,"geteuid","","",null,{"inputs":[],"output":{"name":"uid"}}],[5,"getgid","","",null,{"inputs":[],"output":{"name":"gid"}}],[5,"getegid","","",null,{"inputs":[],"output":{"name":"gid"}}],[5,"setuid","","",null,{"inputs":[{"name":"uid"}],"output":{"name":"result"}}],[5,"setgid","","",null,{"inputs":[{"name":"gid"}],"output":{"name":"result"}}],[5,"pause","","",null,{"inputs":[],"output":{"name":"result"}}],[5,"sleep","","",null,{"inputs":[{"name":"c_uint"}],"output":{"name":"c_uint"}}],[5,"mkstemp","","Creates a regular file which persists even after process termination",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead of paths (see fpathconf(2))",null,{"inputs":[{"name":"rawfd"},{"name":"pathconfvar"}],"output":{"name":"result"}}],[5,"pathconf","","Get path-dependent configurable system variables (see pathconf(2))",null,{"inputs":[{"name":"p"},{"name":"pathconfvar"}],"output":{"name":"result"}}],[5,"sysconf","","Get configurable system variables (see sysconf(3))",null,{"inputs":[{"name":"sysconfvar"}],"output":{"name":"result"}}],[17,"ROOT","","Constant for UID = 0",null,null],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"self"}],"output":{"name":"uid"}}],[11,"eq","","",135,{"inputs":[{"name":"self"},{"name":"uid"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"self"},{"name":"uid"}],"output":{"name":"bool"}}],[11,"hash","","",135,null],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",135,{"inputs":[{"name":"uid_t"}],"output":{"name":"self"}}],[11,"current","","Returns Uid of calling process. This is practically a more Rusty alias for `getuid`.",135,{"inputs":[],"output":{"name":"self"}}],[11,"effective","","Returns effective Uid of calling process. This is practically a more Rusty alias for `geteuid`.",135,{"inputs":[],"output":{"name":"self"}}],[11,"is_root","","Returns true if the `Uid` represents privileged user - root. (If it equals zero.)",135,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"self"}],"output":{"name":"gid"}}],[11,"eq","","",136,{"inputs":[{"name":"self"},{"name":"gid"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"self"},{"name":"gid"}],"output":{"name":"bool"}}],[11,"hash","","",136,null],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",136,{"inputs":[{"name":"gid_t"}],"output":{"name":"self"}}],[11,"current","","Returns Gid of calling process. This is practically a more Rusty alias for `getgid`.",136,{"inputs":[],"output":{"name":"self"}}],[11,"effective","","Returns effective Gid of calling process. This is practically a more Rusty alias for `getgid`.",136,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",136,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"self"}],"output":{"name":"pid"}}],[11,"eq","","",137,{"inputs":[{"name":"self"},{"name":"pid"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"self"},{"name":"pid"}],"output":{"name":"bool"}}],[11,"hash","","",137,null],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",137,{"inputs":[{"name":"pid_t"}],"output":{"name":"self"}}],[11,"this","","Returns PID of calling process",137,{"inputs":[],"output":{"name":"self"}}],[11,"parent","","Returns PID of parent of calling process",137,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",138,{"inputs":[{"name":"pid"}],"output":{"name":"self"}}],[11,"fmt","","",137,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"self"}],"output":{"name":"forkresult"}}],[11,"is_child","","Return `true` if this is the child process of the `fork()`",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",131,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"self"}],"output":{"name":"pathconfvar"}}],[11,"fmt","","",133,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",133,null],[11,"eq","","",133,{"inputs":[{"name":"self"},{"name":"pathconfvar"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"self"}],"output":{"name":"sysconfvar"}}],[11,"fmt","","",134,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",134,null],[11,"eq","","",134,{"inputs":[{"name":"self"},{"name":"sysconfvar"}],"output":{"name":"bool"}}],[6,"Result","nix","Nix Result Type",null,null],[8,"NixPath","","",null,null],[10,"len","","",139,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[10,"with_nix_path","","",139,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"error"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"error"}],"output":{"name":"bool"}}],[11,"from_errno","","Create a nix Error from a given errno",1,{"inputs":[{"name":"errno"}],"output":{"name":"error"}}],[11,"last","","Get the current errno and convert it to a nix Error",1,{"inputs":[],"output":{"name":"error"}}],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",1,{"inputs":[],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"errno"}],"output":{"name":"error"}}],[11,"from","","",1,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"error"}}],[11,"description","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[14,"ioctl","","Generates ioctl functions. See ::sys::ioctl.",null,null],[11,"clone","nix::sys::socket","",45,{"inputs":[{"name":"self"}],"output":{"name":"in_addr"}}],[11,"clone","","",47,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr"}}],[11,"clone","nix::sys::signalfd","",42,{"inputs":[{"name":"self"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","nix::sys::stat","",100,{"inputs":[{"name":"self"}],"output":{"name":"stat"}}],[11,"clone","nix::pty","",15,{"inputs":[{"name":"self"}],"output":{"name":"winsize"}}],[11,"clone","nix::sys::socket","",50,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",48,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",49,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",51,{"inputs":[{"name":"self"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",46,{"inputs":[{"name":"self"}],"output":{"name":"in6_addr"}}]],"paths":[[4,"Errno"],[4,"Error"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"SpliceFFlags"],[3,"OFlag"],[3,"FdFlag"],[3,"SealFlag"],[3,"AtFlags"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"Winsize"],[3,"OpenptyResult"],[3,"PtyMaster"],[3,"PollFd"],[3,"EventFlags"],[3,"CloneFlags"],[3,"CpuSet"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SignalIterator"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"SigEvent"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"in_addr"],[3,"in6_addr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"NetlinkAddr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"RecvMsg"],[3,"linger"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[3,"MsgFlags"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"CmsgSpace"],[3,"CmsgIterator"],[3,"ucred"],[3,"FileStat"],[3,"SFlag"],[3,"Mode"],[4,"RebootMode"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"MapFlags"],[3,"MsFlags"],[3,"ProtFlags"],[3,"IoVec"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"FdSet"],[3,"QuotaCmd"],[3,"Dqblk"],[3,"QuotaValidFlags"],[3,"Statvfs"],[3,"FsFlags"],[3,"UContext"],[4,"ForkResult"],[4,"Whence"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[6,"SessionId"],[8,"NixPath"]]};
searchIndex["signal"] = {"doc":"Signal handling library","items":[[4,"Signal","signal","",null,null],[13,"SIGHUP","","",0,null],[13,"SIGINT","","",0,null],[13,"SIGQUIT","","",0,null],[13,"SIGILL","","",0,null],[13,"SIGTRAP","","",0,null],[13,"SIGABRT","","",0,null],[13,"SIGBUS","","",0,null],[13,"SIGFPE","","",0,null],[13,"SIGKILL","","",0,null],[13,"SIGUSR1","","",0,null],[13,"SIGSEGV","","",0,null],[13,"SIGUSR2","","",0,null],[13,"SIGPIPE","","",0,null],[13,"SIGALRM","","",0,null],[13,"SIGTERM","","",0,null],[13,"SIGSTKFLT","","",0,null],[13,"SIGCHLD","","",0,null],[13,"SIGCONT","","",0,null],[13,"SIGSTOP","","",0,null],[13,"SIGTSTP","","",0,null],[13,"SIGTTIN","","",0,null],[13,"SIGTTOU","","",0,null],[13,"SIGURG","","",0,null],[13,"SIGXCPU","","",0,null],[13,"SIGXFSZ","","",0,null],[13,"SIGVTALRM","","",0,null],[13,"SIGPROF","","",0,null],[13,"SIGWINCH","","",0,null],[13,"SIGIO","","",0,null],[13,"SIGPWR","","",0,null],[13,"SIGSYS","","",0,null],[0,"exec_handler","","Set a signal handler that executes command-line",null,null],[5,"set_command_line","signal::exec_handler","Sets command-line and environment to execute when signal happens",null,{"inputs":[{"name":"p"},{"name":"a"},{"name":"e"}],"output":null}],[5,"set_handler","","Set a handler for multiple signals. If no `set_command_line` was called before this function the command-line is set from `std::env`",null,null],[0,"trap","signal","Trap for handling signals synchronously",null,null],[3,"Trap","signal::trap","A RAII guard for masking out signals and waiting for them synchronously",null,null],[11,"trap","","Create and activate the signal trap for specified signals. Signals not in list will be delivered asynchronously as always.",1,null],[11,"wait","","Wait until any of signals arrived or timeout occurs. In case of timeout returns None, otherwise returns signal number.",1,{"inputs":[{"name":"self"},{"name":"instant"}],"output":{"name":"option"}}],[11,"next","","",1,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"drop","","",1,{"inputs":[{"name":"self"}],"output":null}],[11,"iterator","signal","",0,{"inputs":[],"output":{"name":"signaliterator"}}],[11,"from_c_int","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"signal"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"signal"}],"output":{"name":"bool"}}]],"paths":[[4,"Signal"],[3,"Trap"]]};
searchIndex["void"] = {"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,null],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,{"inputs":[{"name":"self"}],"output":{"name":"t"}}],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,{"inputs":[{"name":"self"}],"output":{"name":"e"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"void"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"t"}],"output":{"name":"option"}}],[11,"description","","",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"cause","","",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
initSearch(searchIndex);
